{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_keyhash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "RequestedRandomness",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "guess_value",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "result",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Result",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_guess_value",
          "type": "uint8"
        }
      ],
      "name": "flip",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "result",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "setPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum CoinToss.STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/nick_/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/VRFConsumerBase.sol",
    "1": "C:/Users/nick_/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/VRFRequestIDBase.sol",
    "3": "contracts/CoinToss.sol",
    "4": "contracts/Pool.sol"
  },
  "ast": {
    "absolutePath": "contracts/CoinToss.sol",
    "exportedSymbols": {
      "CoinToss": [
        356
      ],
      "LinkTokenInterface": [
        706
      ],
      "Pool": [
        561
      ],
      "VRFConsumerBase": [
        477
      ],
      "VRFRequestIDBase": [
        611
      ]
    },
    "id": 357,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "C:/Users/nick_/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 357,
        "sourceUnit": 478,
        "src": "57:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 357,
        "sourceUnit": 562,
        "src": "117:20:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 477,
              "src": "160:15:3"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "160:15:3"
          }
        ],
        "canonicalName": "CoinToss",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 356,
        "linearizedBaseContracts": [
          356,
          477,
          611
        ],
        "name": "CoinToss",
        "nameLocation": "148:8:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "199:3:3",
            "nodeType": "VariableDeclaration",
            "scope": 356,
            "src": "182:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "182:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "65372147",
            "id": 9,
            "mutability": "mutable",
            "name": "result",
            "nameLocation": "221:6:3",
            "nodeType": "VariableDeclaration",
            "scope": 356,
            "src": "208:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 8,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "208:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "current_player",
            "nameLocation": "249:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 356,
            "src": "233:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "233:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "keyhash",
            "nameLocation": "277:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 356,
            "src": "269:15:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 12,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "269:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "295:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 356,
            "src": "290:9:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pool_$561",
              "typeString": "contract Pool"
            },
            "typeName": {
              "id": 15,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14,
                "name": "Pool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 561,
                "src": "290:4:3"
              },
              "referencedDeclaration": 561,
              "src": "290:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pool_$561",
                "typeString": "contract Pool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 18,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "313:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 356,
            "src": "305:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 17,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "305:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 20,
            "mutability": "mutable",
            "name": "guess_value",
            "nameLocation": "330:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 356,
            "src": "324:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 19,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "324:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "bid",
            "nameLocation": "355:3:3",
            "nodeType": "VariableDeclaration",
            "scope": 356,
            "src": "347:11:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "347:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "prize",
            "nameLocation": "372:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 356,
            "src": "364:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "364:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "pool_is_set",
            "nameLocation": "388:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 356,
            "src": "383:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 25,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "383:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "402:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CoinToss.STATE",
            "id": 31,
            "members": [
              {
                "id": 28,
                "name": "DEPLOYED",
                "nameLocation": "435:8:3",
                "nodeType": "EnumValue",
                "src": "435:8:3"
              },
              {
                "id": 29,
                "name": "OPEN",
                "nameLocation": "453:4:3",
                "nodeType": "EnumValue",
                "src": "453:4:3"
              },
              {
                "id": 30,
                "name": "CLOSED",
                "nameLocation": "467:6:3",
                "nodeType": "EnumValue",
                "src": "467:6:3"
              }
            ],
            "name": "STATE",
            "nameLocation": "419:5:3",
            "nodeType": "EnumDefinition",
            "src": "414:65:3"
          },
          {
            "constant": false,
            "functionSelector": "c19d93fb",
            "id": 34,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "498:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 356,
            "src": "485:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_STATE_$31",
              "typeString": "enum CoinToss.STATE"
            },
            "typeName": {
              "id": 33,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32,
                "name": "STATE",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31,
                "src": "485:5:3"
              },
              "referencedDeclaration": 31,
              "src": "485:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_STATE_$31",
                "typeString": "enum CoinToss.STATE"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "e5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e",
            "id": 38,
            "name": "RequestedRandomness",
            "nameLocation": "516:19:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "544:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "536:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "535:19:3"
            },
            "src": "510:45:3"
          },
          {
            "anonymous": false,
            "eventSelector": "753342ea4b32f4d5de53502a8e9a7f7d91bbc2b0de37a9d3f79afea8f96e01b4",
            "id": 50,
            "name": "Result",
            "nameLocation": "566:6:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "guess_value",
                  "nameLocation": "579:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "573:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "598:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "592:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bid",
                  "nameLocation": "614:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "606:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "627:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "619:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "643:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "635:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "572:81:3"
            },
            "src": "560:94:3"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "822:116:3",
              "statements": [
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "832:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "838:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "832:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "832:10:3"
                },
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69,
                      "name": "keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "852:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70,
                      "name": "_keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "862:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "852:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "852:18:3"
                },
                {
                  "expression": {
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "880:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 74,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "888:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "888:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "880:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "880:18:3"
                },
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "909:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_STATE_$31",
                        "typeString": "enum CoinToss.STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 79,
                        "name": "STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "917:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_STATE_$31_$",
                          "typeString": "type(enum CoinToss.STATE)"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DEPLOYED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "917:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_STATE_$31",
                        "typeString": "enum CoinToss.STATE"
                      }
                    },
                    "src": "909:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_STATE_$31",
                      "typeString": "enum CoinToss.STATE"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "909:22:3"
                }
              ]
            },
            "id": 84,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 61,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52,
                    "src": "798:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 62,
                    "name": "_link",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54,
                    "src": "815:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 63,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 60,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 477,
                  "src": "782:15:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "782:39:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "689:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "681:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "722:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "714:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "745:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "737:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "737:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "_keyhash",
                  "nameLocation": "767:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "759:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "671:110:3"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:3"
            },
            "scope": 356,
            "src": "660:278:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "965:69:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "983:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "983:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 89,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "997:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "983:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206f776e6572",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1004:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
                          "typeString": "literal_string \"Not owner\""
                        },
                        "value": "Not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
                          "typeString": "literal_string \"Not owner\""
                        }
                      ],
                      "id": 86,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "975:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "975:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "975:41:3"
                },
                {
                  "id": 94,
                  "nodeType": "PlaceholderStatement",
                  "src": "1026:1:3"
                }
              ]
            },
            "id": 96,
            "name": "onlyOwner",
            "nameLocation": "953:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "962:2:3"
            },
            "src": "944:90:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "1097:63:3",
              "statements": [
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1107:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$561",
                        "typeString": "contract Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 105,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "1119:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 104,
                        "name": "Pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "1114:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pool_$561_$",
                          "typeString": "type(contract Pool)"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1114:11:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$561",
                        "typeString": "contract Pool"
                      }
                    },
                    "src": "1107:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$561",
                      "typeString": "contract Pool"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1107:18:3"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1135:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_STATE_$31",
                        "typeString": "enum CoinToss.STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 110,
                        "name": "STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1143:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_STATE_$31_$",
                          "typeString": "type(enum CoinToss.STATE)"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "1143:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_STATE_$31",
                        "typeString": "enum CoinToss.STATE"
                      }
                    },
                    "src": "1135:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_STATE_$31",
                      "typeString": "enum CoinToss.STATE"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1135:18:3"
                }
              ]
            },
            "functionSelector": "4437152a",
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 101,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "1087:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1087:9:3"
              }
            ],
            "name": "setPool",
            "nameLocation": "1049:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "1073:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1057:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1056:23:3"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1097:0:3"
            },
            "scope": 356,
            "src": "1040:120:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1215:50:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 122,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1240:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$561",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$561",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1232:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1232:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1232:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "1232:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3530",
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1256:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "1232:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 119,
                  "id": 127,
                  "nodeType": "Return",
                  "src": "1225:33:3"
                }
              ]
            },
            "id": 129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maximumBid",
            "nameLocation": "1175:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1185:2:3"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1206:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1205:9:3"
            },
            "scope": 356,
            "src": "1166:99:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "1322:1002:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_STATE_$31",
                          "typeString": "enum CoinToss.STATE"
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 135,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "1340:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_STATE_$31",
                            "typeString": "enum CoinToss.STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 136,
                            "name": "STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "1349:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_STATE_$31_$",
                              "typeString": "type(enum CoinToss.STATE)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "1349:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_STATE_$31",
                            "typeString": "enum CoinToss.STATE"
                          }
                        },
                        "src": "1340:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1332:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1332:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1332:28:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 142,
                          "name": "current_player",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1378:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1404:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1396:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 143,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1396:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1396:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1378:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1370:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1370:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:37:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 151,
                            "name": "_guess_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "1439:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1455:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1439:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 154,
                            "name": "_guess_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "1460:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1476:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1460:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1439:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720666f726d6174206f662067756573732076616c7565",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1491:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b0d94d71521d5bd4fecbe1be6b1162a8122acf6f14ff77bda6b4e5eb6b55428",
                          "typeString": "literal_string \"Wrong format of guess value\""
                        },
                        "value": "Wrong format of guess value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b0d94d71521d5bd4fecbe1be6b1162a8122acf6f14ff77bda6b4e5eb6b55428",
                          "typeString": "literal_string \"Wrong format of guess value\""
                        }
                      ],
                      "id": 150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1418:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:112:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:112:3"
                },
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 161,
                      "name": "guess_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1540:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 162,
                      "name": "_guess_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "1554:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1540:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "1540:26:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1585:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1585:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 168,
                            "name": "maximumBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "1598:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () returns (uint256)"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1598:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1585:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75722062696420697320746f6f20626967",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1612:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13c67f162e0b3067ea38bb39d09fecdff981d5485c614524dbca445e8c5d3cdd",
                          "typeString": "literal_string \"Your bid is too big\""
                        },
                        "value": "Your bid is too big"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13c67f162e0b3067ea38bb39d09fecdff981d5485c614524dbca445e8c5d3cdd",
                          "typeString": "literal_string \"Your bid is too big\""
                        }
                      ],
                      "id": 165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1577:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1577:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "1577:57:3"
                },
                {
                  "expression": {
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 174,
                      "name": "bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1644:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 175,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1650:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1650:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1644:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1644:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 182,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1686:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CoinToss_$356",
                                  "typeString": "contract CoinToss"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CoinToss_$356",
                                  "typeString": "contract CoinToss"
                                }
                              ],
                              "id": 181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1678:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 180,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1678:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1678:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1678:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 185,
                          "name": "bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "1703:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1678:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42616c616e6365206f6620636f6e7472616374206973206e6f7420657175616c20746f2074686520626964",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1708:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e762cad0c70a004b82266b60e10a8e38cf33c90cdfb8ae877a290325b34272d",
                          "typeString": "literal_string \"Balance of contract is not equal to the bid\""
                        },
                        "value": "Balance of contract is not equal to the bid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e762cad0c70a004b82266b60e10a8e38cf33c90cdfb8ae877a290325b34272d",
                          "typeString": "literal_string \"Balance of contract is not equal to the bid\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1670:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1670:84:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "1670:84:3"
                },
                {
                  "expression": {
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 190,
                      "name": "prize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1765:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 191,
                        "name": "bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1773:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1779:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1773:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1765:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "1765:15:3"
                },
                {
                  "expression": {
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 196,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1791:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_STATE_$31",
                        "typeString": "enum CoinToss.STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 197,
                        "name": "STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1799:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_STATE_$31_$",
                          "typeString": "type(enum CoinToss.STATE)"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "1799:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_STATE_$31",
                        "typeString": "enum CoinToss.STATE"
                      }
                    },
                    "src": "1791:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_STATE_$31",
                      "typeString": "enum CoinToss.STATE"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "1791:20:3"
                },
                {
                  "expression": {
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 201,
                      "name": "current_player",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1821:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 204,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1846:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1846:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1838:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1838:8:3",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1838:19:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1821:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:36:3"
                },
                {
                  "assignments": [
                    210,
                    212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "1874:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 270,
                      "src": "1869:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 209,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1869:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 212,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1893:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 270,
                      "src": "1880:17:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 211,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1880:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 229,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1972:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 217,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "1917:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Pool_$561",
                                    "typeString": "contract Pool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Pool_$561",
                                    "typeString": "contract Pool"
                                  }
                                ],
                                "id": 216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1909:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 215,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1909:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1909:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1901:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 213,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1901:8:3",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1901:22:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1901:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 223,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1944:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CoinToss_$356",
                                  "typeString": "contract CoinToss"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CoinToss_$356",
                                  "typeString": "contract CoinToss"
                                }
                              ],
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1936:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 221,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1936:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1936:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1936:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1901:57:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1901:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1868:116:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 231,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "2002:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e20776173206e6f74207375636365737366756c6c",
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2008:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_367176c7bfc73f526cf4ec4dca3194ab473679a2139fe8548ef6bbabfc2866e5",
                          "typeString": "literal_string \"Transaction was not successfull\""
                        },
                        "value": "Transaction was not successfull"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_367176c7bfc73f526cf4ec4dca3194ab473679a2139fe8548ef6bbabfc2866e5",
                          "typeString": "literal_string \"Transaction was not successfull\""
                        }
                      ],
                      "id": 230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1994:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1994:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "1994:48:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 238,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2068:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CoinToss_$356",
                                  "typeString": "contract CoinToss"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CoinToss_$356",
                                  "typeString": "contract CoinToss"
                                }
                              ],
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2060:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 236,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2060:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2060:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2060:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2085:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2060:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616c6c20455448207472616e7366657272656420746f2074686520706f6f6c",
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2088:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afcad3de638628168229f22d574ad2fee0874ee40b5ca459f0b15ed740bc5486",
                          "typeString": "literal_string \"Not all ETH transferred to the pool\""
                        },
                        "value": "Not all ETH transferred to the pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afcad3de638628168229f22d574ad2fee0874ee40b5ca459f0b15ed740bc5486",
                          "typeString": "literal_string \"Not all ETH transferred to the pool\""
                        }
                      ],
                      "id": 235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2052:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2052:74:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2052:74:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 251,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2177:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CoinToss_$356",
                                    "typeString": "contract CoinToss"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CoinToss_$356",
                                    "typeString": "contract CoinToss"
                                  }
                                ],
                                "id": 250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2169:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 249,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2169:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2169:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 247,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "2154:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$706",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 638,
                            "src": "2154:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2154:29:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 254,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2187:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2154:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204c494e4b",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2192:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c0755f7b177a75a575a6fc1ad54a95f3c29b31e64f77075462b5456f056869d",
                          "typeString": "literal_string \"Not enough LINK\""
                        },
                        "value": "Not enough LINK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c0755f7b177a75a575a6fc1ad54a95f3c29b31e64f77075462b5456f056869d",
                          "typeString": "literal_string \"Not enough LINK\""
                        }
                      ],
                      "id": 246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2146:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2146:64:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "2146:64:3"
                },
                {
                  "assignments": [
                    260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 260,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "2229:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 270,
                      "src": "2221:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2221:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 265,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 262,
                        "name": "keyhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2259:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 263,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2268:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 261,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 427,
                      "src": "2241:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2241:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2221:51:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 267,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "2307:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 266,
                      "name": "RequestedRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2287:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2287:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "EmitStatement",
                  "src": "2282:35:3"
                }
              ]
            },
            "functionSelector": "638c0637",
            "id": 271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flip",
            "nameLocation": "1280:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_guess_value",
                  "nameLocation": "1291:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "1285:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1284:20:3"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1322:0:3"
            },
            "scope": 356,
            "src": "1271:1053:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              371
            ],
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "2436:462:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_STATE_$31",
                          "typeString": "enum CoinToss.STATE"
                        },
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 280,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2454:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_STATE_$31",
                            "typeString": "enum CoinToss.STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 281,
                            "name": "STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "2463:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_STATE_$31_$",
                              "typeString": "type(enum CoinToss.STATE)"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "2463:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_STATE_$31",
                            "typeString": "enum CoinToss.STATE"
                          }
                        },
                        "src": "2454:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 279,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2446:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2446:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "2446:30:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 287,
                          "name": "current_player",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2494:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2520:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2512:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 288,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2512:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2512:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2494:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2486:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2486:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "2486:37:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 296,
                          "name": "_randomness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "2541:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2555:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2541:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2533:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2533:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "2533:24:3"
                },
                {
                  "expression": {
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 301,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2568:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 304,
                            "name": "_randomness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "2583:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2597:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "2583:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2577:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2577:5:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2577:22:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2568:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "2568:31:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 310,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2615:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 311,
                      "name": "guess_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2625:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2615:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 321,
                  "nodeType": "IfStatement",
                  "src": "2611:89:3",
                  "trueBody": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "2638:62:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 316,
                              "name": "current_player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "2667:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 317,
                              "name": "prize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "2683:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 313,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "2652:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pool_$561",
                                "typeString": "contract Pool"
                              }
                            },
                            "id": 315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payWinner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 544,
                            "src": "2652:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,uint256) external"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2652:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "2652:37:3"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 323,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2722:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 324,
                        "name": "guess_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2730:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 325,
                        "name": "bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2743:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 326,
                        "name": "current_player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2748:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 327,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2764:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2764:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 322,
                      "name": "Result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "2715:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_uint8_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint8,uint8,uint256,address,uint256)"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2715:65:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "EmitStatement",
                  "src": "2710:70:3"
                },
                {
                  "expression": {
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 331,
                      "name": "bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2791:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2797:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2791:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "2791:7:3"
                },
                {
                  "expression": {
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 335,
                      "name": "prize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2808:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2816:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2808:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "2808:9:3"
                },
                {
                  "expression": {
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 339,
                      "name": "current_player",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2827:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2860:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2852:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 342,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2852:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2852:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2844:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2844:8:3",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2844:19:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2827:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "2827:36:3"
                },
                {
                  "expression": {
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 349,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2873:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_STATE_$31",
                        "typeString": "enum CoinToss.STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 350,
                        "name": "STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "2881:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_STATE_$31_$",
                          "typeString": "type(enum CoinToss.STATE)"
                        }
                      },
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "2881:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_STATE_$31",
                        "typeString": "enum CoinToss.STATE"
                      }
                    },
                    "src": "2873:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_STATE_$31",
                      "typeString": "enum CoinToss.STATE"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "2873:18:3"
                }
              ]
            },
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "2339:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 277,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2423:8:3"
            },
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "2365:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2357:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_randomness",
                  "nameLocation": "2385:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2377:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2377:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2356:41:3"
            },
            "returnParameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2436:0:3"
            },
            "scope": 356,
            "src": "2330:568:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 357,
        "src": "139:2761:3",
        "usedErrors": []
      }
    ],
    "src": "32:2869:3"
  },
  "bytecode": "60c06040526008805460ff1916905534801561001a57600080fd5b50604051610c18380380610c1883398101604081905261003991610095565b6001600160a01b0393841660a05291909216608052600191909155600355600580546001600160a01b031916331790556008805461ff00191690556100d8565b80516001600160a01b038116811461009057600080fd5b919050565b600080600080608085870312156100ab57600080fd5b6100b485610079565b93506100c260208601610079565b6040860151606090960151949790965092505050565b60805160a051610b0d61010b6000396000818161054f015261061e01526000818161044001526105ef0152610b0d6000f3fe60806040526004361061004a5760003560e01c80634437152a1461004f578063638c063714610071578063653721471461008457806394985ddd146100b5578063c19d93fb146100d5575b600080fd5b34801561005b57600080fd5b5061006f61006a3660046108f2565b610101565b005b61006f61007f366004610922565b610180565b34801561009057600080fd5b5060025461009e9060ff1681565b60405160ff90911681526020015b60405180910390f35b3480156100c157600080fd5b5061006f6100d0366004610945565b610544565b3480156100e157600080fd5b506008546100f490610100900460ff1681565b6040516100ac919061097d565b6005546001600160a01b0316331461014c5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b600480546001600160a01b0319166001600160a01b038316179055600880546001919061ff00191661010083021790555050565b6001600854610100900460ff16600281111561019e5761019e610967565b146101a857600080fd5b60025461010090046001600160a01b0316156101c357600080fd5b60ff811615806101d657508060ff166001145b6102225760405162461bcd60e51b815260206004820152601b60248201527f57726f6e6720666f726d6174206f662067756573732076616c756500000000006044820152606401610143565b6005805460ff60a01b1916600160a01b60ff8416021790556102426105ca565b3411156102875760405162461bcd60e51b8152602060048201526013602482015272596f75722062696420697320746f6f2062696760681b6044820152606401610143565b34600681905547146102ef5760405162461bcd60e51b815260206004820152602b60248201527f42616c616e6365206f6620636f6e7472616374206973206e6f7420657175616c60448201526a081d1bc81d1a1948189a5960aa1b6064820152608401610143565b6006546102fd9060026109bb565b6007556008805461ff00191661020017905560028054610100600160a81b031916610100330217905560045460405160009182916001600160a01b039091169047908381818185875af1925050503d8060008114610377576040519150601f19603f3d011682016040523d82523d6000602084013e61037c565b606091505b5091509150816103ce5760405162461bcd60e51b815260206004820152601f60248201527f5472616e73616374696f6e20776173206e6f74207375636365737366756c6c006044820152606401610143565b47156104285760405162461bcd60e51b815260206004820152602360248201527f4e6f7420616c6c20455448207472616e7366657272656420746f2074686520706044820152621bdbdb60ea1b6064820152608401610143565b6001546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561048f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b391906109da565b10156104f35760405162461bcd60e51b815260206004820152600f60248201526e4e6f7420656e6f756768204c494e4b60881b6044820152606401610143565b60006105036003546001546105eb565b90507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e8160405161053691815260200190565b60405180910390a150505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105bc5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610143565b6105c68282610765565b5050565b6004546000906105e6906032906001600160a01b031631610a09565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f00000000000000000000000000000000000000000000000000000000000000008486600060405160200161065b929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161068893929190610a1d565b6020604051808303816000875af11580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb9190610a89565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610725906001610aab565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b6002600854610100900460ff16600281111561078357610783610967565b1461078d57600080fd5b60025461010090046001600160a01b03166107a757600080fd5b600081116107b457600080fd5b6107bf600282610ac3565b6002805460ff191660ff928316908117909155600554600160a01b900490911690036108565760048054600254600754604051634e958d0560e01b81526001600160a01b0361010090930483169481019490945260248401521690634e958d0590604401600060405180830381600087803b15801561083d57600080fd5b505af1158015610851573d6000803e3d6000fd5b505050505b6002546005546006546040805160ff8086168252600160a01b90940490931660208401528201526101009091046001600160a01b031660608201524260808201527f753342ea4b32f4d5de53502a8e9a7f7d91bbc2b0de37a9d3f79afea8f96e01b49060a00160405180910390a150506000600681905560075560028054610100600160a81b03191690556008805461ff001916610100179055565b60006020828403121561090457600080fd5b81356001600160a01b038116811461091b57600080fd5b9392505050565b60006020828403121561093457600080fd5b813560ff8116811461091b57600080fd5b6000806040838503121561095857600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b602081016003831061099f57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156109d5576109d56109a5565b500290565b6000602082840312156109ec57600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082610a1857610a186109f3565b500490565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b81811015610a5f57858101830151858201608001528201610a43565b81811115610a71576000608083870101525b50601f01601f19169290920160800195945050505050565b600060208284031215610a9b57600080fd5b8151801515811461091b57600080fd5b60008219821115610abe57610abe6109a5565b500190565b600082610ad257610ad26109f3565b50069056fea264697066735822122081934c2cd0f6d14d7722a868b31fbe20e014eeaef0eea74991ffc47b68feedea64736f6c634300080d0033",
  "bytecodeSha1": "55c17abdf8a1f94fa19792c4dceec3f12ac4c044",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "CoinToss",
  "coverageMap": {
    "branches": {
      "0": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "46": [
            9668,
            9696,
            true
          ]
        }
      },
      "1": {},
      "3": {
        "CoinToss.flip": {
          "34": [
            1340,
            1359,
            true
          ],
          "35": [
            1378,
            1406,
            true
          ],
          "36": [
            1439,
            1456,
            true
          ],
          "37": [
            1460,
            1477,
            true
          ],
          "38": [
            1585,
            1610,
            true
          ],
          "39": [
            1678,
            1706,
            true
          ],
          "40": [
            2002,
            2006,
            true
          ],
          "41": [
            2060,
            2086,
            true
          ],
          "42": [
            2154,
            2190,
            true
          ]
        },
        "CoinToss.fulfillRandomness": {
          "43": [
            2454,
            2475,
            true
          ],
          "44": [
            2541,
            2556,
            true
          ],
          "45": [
            2615,
            2636,
            false
          ]
        }
      },
      "4": {}
    },
    "statements": {
      "0": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "16": [
            9660,
            9732
          ],
          "17": [
            9738,
            9778
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "19": [
            7834,
            7921
          ],
          "21": [
            8663,
            8702
          ],
          "23": [
            8708,
            8747
          ]
        }
      },
      "1": {
        "VRFRequestIDBase.makeRequestId": {
          "22": [
            1518,
            1577
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "20": [
            953,
            1031
          ]
        }
      },
      "3": {
        "CoinToss.flip": {
          "2": [
            1332,
            1360
          ],
          "3": [
            1370,
            1407
          ],
          "4": [
            1418,
            1530
          ],
          "5": [
            1540,
            1566
          ],
          "6": [
            1577,
            1634
          ],
          "7": [
            1644,
            1659
          ],
          "8": [
            1670,
            1754
          ],
          "9": [
            1765,
            1780
          ],
          "10": [
            1791,
            1811
          ],
          "11": [
            1821,
            1857
          ],
          "12": [
            1994,
            2042
          ],
          "13": [
            2052,
            2126
          ],
          "14": [
            2146,
            2210
          ],
          "15": [
            2282,
            2317
          ]
        },
        "CoinToss.fulfillRandomness": {
          "24": [
            2446,
            2476
          ],
          "25": [
            2486,
            2523
          ],
          "26": [
            2533,
            2557
          ],
          "27": [
            2568,
            2599
          ],
          "28": [
            2652,
            2689
          ],
          "29": [
            2710,
            2780
          ],
          "30": [
            2791,
            2798
          ],
          "31": [
            2808,
            2817
          ],
          "32": [
            2827,
            2863
          ],
          "33": [
            2873,
            2891
          ]
        },
        "CoinToss.maximumBid": {
          "18": [
            1225,
            1258
          ]
        },
        "CoinToss.setPool": {
          "0": [
            1107,
            1125
          ],
          "1": [
            1135,
            1153
          ]
        }
      },
      "4": {}
    }
  },
  "dependencies": [
    "Pool",
    "smartcontractkit/chainlink-brownie-contracts@0.4.0/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@0.4.0/VRFRequestIDBase"
  ],
  "deployedBytecode": "60806040526004361061004a5760003560e01c80634437152a1461004f578063638c063714610071578063653721471461008457806394985ddd146100b5578063c19d93fb146100d5575b600080fd5b34801561005b57600080fd5b5061006f61006a3660046108f2565b610101565b005b61006f61007f366004610922565b610180565b34801561009057600080fd5b5060025461009e9060ff1681565b60405160ff90911681526020015b60405180910390f35b3480156100c157600080fd5b5061006f6100d0366004610945565b610544565b3480156100e157600080fd5b506008546100f490610100900460ff1681565b6040516100ac919061097d565b6005546001600160a01b0316331461014c5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b600480546001600160a01b0319166001600160a01b038316179055600880546001919061ff00191661010083021790555050565b6001600854610100900460ff16600281111561019e5761019e610967565b146101a857600080fd5b60025461010090046001600160a01b0316156101c357600080fd5b60ff811615806101d657508060ff166001145b6102225760405162461bcd60e51b815260206004820152601b60248201527f57726f6e6720666f726d6174206f662067756573732076616c756500000000006044820152606401610143565b6005805460ff60a01b1916600160a01b60ff8416021790556102426105ca565b3411156102875760405162461bcd60e51b8152602060048201526013602482015272596f75722062696420697320746f6f2062696760681b6044820152606401610143565b34600681905547146102ef5760405162461bcd60e51b815260206004820152602b60248201527f42616c616e6365206f6620636f6e7472616374206973206e6f7420657175616c60448201526a081d1bc81d1a1948189a5960aa1b6064820152608401610143565b6006546102fd9060026109bb565b6007556008805461ff00191661020017905560028054610100600160a81b031916610100330217905560045460405160009182916001600160a01b039091169047908381818185875af1925050503d8060008114610377576040519150601f19603f3d011682016040523d82523d6000602084013e61037c565b606091505b5091509150816103ce5760405162461bcd60e51b815260206004820152601f60248201527f5472616e73616374696f6e20776173206e6f74207375636365737366756c6c006044820152606401610143565b47156104285760405162461bcd60e51b815260206004820152602360248201527f4e6f7420616c6c20455448207472616e7366657272656420746f2074686520706044820152621bdbdb60ea1b6064820152608401610143565b6001546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561048f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b391906109da565b10156104f35760405162461bcd60e51b815260206004820152600f60248201526e4e6f7420656e6f756768204c494e4b60881b6044820152606401610143565b60006105036003546001546105eb565b90507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e8160405161053691815260200190565b60405180910390a150505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105bc5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610143565b6105c68282610765565b5050565b6004546000906105e6906032906001600160a01b031631610a09565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f00000000000000000000000000000000000000000000000000000000000000008486600060405160200161065b929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161068893929190610a1d565b6020604051808303816000875af11580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb9190610a89565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610725906001610aab565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b6002600854610100900460ff16600281111561078357610783610967565b1461078d57600080fd5b60025461010090046001600160a01b03166107a757600080fd5b600081116107b457600080fd5b6107bf600282610ac3565b6002805460ff191660ff928316908117909155600554600160a01b900490911690036108565760048054600254600754604051634e958d0560e01b81526001600160a01b0361010090930483169481019490945260248401521690634e958d0590604401600060405180830381600087803b15801561083d57600080fd5b505af1158015610851573d6000803e3d6000fd5b505050505b6002546005546006546040805160ff8086168252600160a01b90940490931660208401528201526101009091046001600160a01b031660608201524260808201527f753342ea4b32f4d5de53502a8e9a7f7d91bbc2b0de37a9d3f79afea8f96e01b49060a00160405180910390a150506000600681905560075560028054610100600160a81b03191690556008805461ff001916610100179055565b60006020828403121561090457600080fd5b81356001600160a01b038116811461091b57600080fd5b9392505050565b60006020828403121561093457600080fd5b813560ff8116811461091b57600080fd5b6000806040838503121561095857600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b602081016003831061099f57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156109d5576109d56109a5565b500290565b6000602082840312156109ec57600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082610a1857610a186109f3565b500490565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b81811015610a5f57858101830151858201608001528201610a43565b81811115610a71576000608083870101525b50601f01601f19169290920160800195945050505050565b600060208284031215610a9b57600080fd5b8151801515811461091b57600080fd5b60008219821115610abe57610abe6109a5565b500190565b600082610ad257610ad26109f3565b50069056fea264697066735822122081934c2cd0f6d14d7722a868b31fbe20e014eeaef0eea74991ffc47b68feedea64736f6c634300080d0033",
  "deployedSourceMap": "139:2761:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1040:120;;;;;;;;;;-1:-1:-1;1040:120:3;;;;;:::i;:::-;;:::i;:::-;;1271:1053;;;;;;:::i;:::-;;:::i;208:19::-;;;;;;;;;;-1:-1:-1;208:19:3;;;;;;;;;;;759:4:5;747:17;;;729:36;;717:2;702:18;208:19:3;;;;;;;;9576:207:0;;;;;;;;;;-1:-1:-1;9576:207:0;;;;;:::i;:::-;;:::i;485:18:3:-;;;;;;;;;;-1:-1:-1;485:18:3;;;;;;;;;;;;;;;;;;:::i;1040:120::-;997:5;;-1:-1:-1;;;;;997:5:3;983:10;:19;975:41;;;;-1:-1:-1;;;975:41:3;;1704:2:5;975:41:3;;;1686:21:5;1743:1;1723:18;;;1716:29;-1:-1:-1;;;1761:18:5;;;1754:39;1810:18;;975:41:3;;;;;;;;;1107:4:::1;:18:::0;;-1:-1:-1;;;;;;1107:18:3::1;-1:-1:-1::0;;;;;1107:18:3;::::1;;::::0;;1135:5:::1;:18:::0;;-1:-1:-1;;1135:5:3;-1:-1:-1;;1135:18:3::1;1107;-1:-1:-1::0;1135:18:3::1;;;;;1040:120:::0;:::o;1271:1053::-;1349:10;1340:5;;;;;;;:19;;;;;;;;:::i;:::-;;1332:28;;;;;;1378:14;;;;;-1:-1:-1;;;;;1378:14:3;:28;1370:37;;;;;;1439:17;;;;;:38;;;1460:12;:17;;1476:1;1460:17;1439:38;1418:112;;;;-1:-1:-1;;;1418:112:3;;2041:2:5;1418:112:3;;;2023:21:5;2080:2;2060:18;;;2053:30;2119:29;2099:18;;;2092:57;2166:18;;1418:112:3;1839:351:5;1418:112:3;1540:11;:26;;-1:-1:-1;;;;1540:26:3;-1:-1:-1;;;1540:26:3;;;;;;;1598:12;:10;:12::i;:::-;1585:9;:25;;1577:57;;;;-1:-1:-1;;;1577:57:3;;2397:2:5;1577:57:3;;;2379:21:5;2436:2;2416:18;;;2409:30;-1:-1:-1;;;2455:18:5;;;2448:49;2514:18;;1577:57:3;2195:343:5;1577:57:3;1650:9;1644:3;:15;;;1678:21;:28;1670:84;;;;-1:-1:-1;;;1670:84:3;;2745:2:5;1670:84:3;;;2727:21:5;2784:2;2764:18;;;2757:30;2823:34;2803:18;;;2796:62;-1:-1:-1;;;2874:18:5;;;2867:41;2925:19;;1670:84:3;2543:407:5;1670:84:3;1773:3;;:7;;1779:1;1773:7;:::i;:::-;1765:5;:15;1791:5;:20;;-1:-1:-1;;1791:20:3;;;;;1799:12;1821:36;;-1:-1:-1;;;;;;1821:36:3;1791:20;1846:10;1821:36;;;;1917:4;;1901:83;;-1:-1:-1;;;;;;;;;1917:4:3;;;;1936:21;;-1:-1:-1;1901:83:3;-1:-1:-1;1901:83:3;1936:21;1917:4;1901:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1868:116;;;;2002:4;1994:48;;;;-1:-1:-1;;;1994:48:3;;3672:2:5;1994:48:3;;;3654:21:5;3711:2;3691:18;;;3684:30;3750:33;3730:18;;;3723:61;3801:18;;1994:48:3;3470:355:5;1994:48:3;2060:21;:26;2052:74;;;;-1:-1:-1;;;2052:74:3;;4032:2:5;2052:74:3;;;4014:21:5;4071:2;4051:18;;;4044:30;4110:34;4090:18;;;4083:62;-1:-1:-1;;;4161:18:5;;;4154:33;4204:19;;2052:74:3;3830:399:5;2052:74:3;2187:3;;2154:29;;-1:-1:-1;;;2154:29:3;;2177:4;2154:29;;;4380:51:5;2154:4:3;-1:-1:-1;;;;;2154:14:3;;;;4353:18:5;;2154:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;2146:64;;;;-1:-1:-1;;;2146:64:3;;4833:2:5;2146:64:3;;;4815:21:5;4872:2;4852:18;;;4845:30;-1:-1:-1;;;4891:18:5;;;4884:45;4946:18;;2146:64:3;4631:339:5;2146:64:3;2221:17;2241:31;2259:7;;2268:3;;2241:17;:31::i;:::-;2221:51;;2287:30;2307:9;2287:30;;;;5121:25:5;;5109:2;5094:18;;4975:177;2287:30:3;;;;;;;;1322:1002;;;1271:1053;:::o;9576:207:0:-;9668:10;-1:-1:-1;;;;;9682:14:0;9668:28;;9660:72;;;;-1:-1:-1;;;9660:72:0;;5359:2:5;9660:72:0;;;5341:21:5;5398:2;5378:18;;;5371:30;5437:33;5417:18;;;5410:61;5488:18;;9660:72:0;5157:355:5;9660:72:0;9738:40;9756:9;9767:10;9738:17;:40::i;:::-;9576:207;;:::o;1166:99:3:-;1240:4;;1206:7;;1232:26;;1256:2;;-1:-1:-1;;;;;1240:4:3;1232:21;:26;:::i;:::-;1225:33;;1166:99;:::o;7732:1020:0:-;7809:17;7834:4;-1:-1:-1;;;;;7834:20:0;;7855:14;7871:4;7888:8;6589:1;7877:43;;;;;;;;5948:25:5;;;6004:2;5989:18;;5982:34;5936:2;5921:18;;5774:248;7877:43:0;;;;;;;;;;;;;7834:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8152:15:0;8235:16;;;;;;;;;;;;978:51:1;;;;;8372:25:5;;;8413:18;;;8406:34;;;8228:4:0;8456:18:5;;;8449:60;8525:18;;;;8518:34;;;978:51:1;;;;;;;;;;8344:19:5;;;;978:51:1;;;968:62;;;;;;;;;8682:16:0;;;;;;;:20;;8701:1;8682:20;:::i;:::-;8663:6;:16;;;;;;;;;;;;:39;;;;1535:41:1;;;;;8720:19:5;;;8755:12;;;8748:28;;;1535:41:1;;;;;;;;;8792:12:5;;;;1535:41:1;;;1525:52;;;;;8708:39:0;7732:1020;-1:-1:-1;;;;7732:1020:0:o;2330:568:3:-;2463:12;2454:5;;;;;;;:21;;;;;;;;:::i;:::-;;2446:30;;;;;;2494:14;;;;;-1:-1:-1;;;;;2494:14:3;2486:37;;;;;;2555:1;2541:11;:15;2533:24;;;;;;2583:15;2597:1;2583:11;:15;:::i;:::-;2568:6;:31;;-1:-1:-1;;2568:31:3;;;;;;;;;;;2625:11;;-1:-1:-1;;;2625:11:3;;;;;2615:21;;2611:89;;2652:4;;;2667:14;;2683:5;;2652:37;;-1:-1:-1;;;2652:37:3;;-1:-1:-1;;;;;2652:4:3;2667:14;;;;;2652:37;;;7520:51:5;;;;7587:18;;;7580:34;2652:4:3;;:14;;7493:18:5;;2652:37:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2611:89;2722:6;;2730:11;;2743:3;;2715:65;;;2722:6;;;;7884:36:5;;-1:-1:-1;;;2730:11:3;;;;;;7951:2:5;7936:18;;7929:45;7990:18;;7983:34;2722:6:3;2748:14;;;-1:-1:-1;;;;;2748:14:3;8048:2:5;8033:18;;8026:60;2764:15:3;8117:3:5;8102:19;;8095:35;2715:65:3;;7871:3:5;7856:19;2715:65:3;;;;;;;-1:-1:-1;;2797:1:3;2791:3;:7;;;2808:5;:9;2827:14;:36;;-1:-1:-1;;;;;;2827:36:3;;;2873:5;:18;;-1:-1:-1;;2873:18:3;2827:36;2873:18;;;2330:568::o;14:294:5:-;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;176:23;;-1:-1:-1;;;;;228:31:5;;218:42;;208:70;;274:1;271;264:12;208:70;297:5;14:294;-1:-1:-1;;;14:294:5:o;313:269::-;370:6;423:2;411:9;402:7;398:23;394:32;391:52;;;439:1;436;429:12;391:52;478:9;465:23;528:4;521:5;517:16;510:5;507:27;497:55;;548:1;545;538:12;776:248;844:6;852;905:2;893:9;884:7;880:23;876:32;873:52;;;921:1;918;911:12;873:52;-1:-1:-1;;944:23:5;;;1014:2;999:18;;;986:32;;-1:-1:-1;776:248:5:o;1029:127::-;1090:10;1085:3;1081:20;1078:1;1071:31;1121:4;1118:1;1111:15;1145:4;1142:1;1135:15;1161:336;1301:2;1286:18;;1334:1;1323:13;;1313:144;;1379:10;1374:3;1370:20;1367:1;1360:31;1414:4;1411:1;1404:15;1442:4;1439:1;1432:15;1313:144;1466:25;;;1161:336;:::o;2955:127::-;3016:10;3011:3;3007:20;3004:1;2997:31;3047:4;3044:1;3037:15;3071:4;3068:1;3061:15;3087:168;3127:7;3193:1;3189;3185:6;3181:14;3178:1;3175:21;3170:1;3163:9;3156:17;3152:45;3149:71;;;3200:18;;:::i;:::-;-1:-1:-1;3240:9:5;;3087:168::o;4442:184::-;4512:6;4565:2;4553:9;4544:7;4540:23;4536:32;4533:52;;;4581:1;4578;4571:12;4533:52;-1:-1:-1;4604:16:5;;4442:184;-1:-1:-1;4442:184:5:o;5517:127::-;5578:10;5573:3;5569:20;5566:1;5559:31;5609:4;5606:1;5599:15;5633:4;5630:1;5623:15;5649:120;5689:1;5715;5705:35;;5720:18;;:::i;:::-;-1:-1:-1;5754:9:5;;5649:120::o;6027:766::-;6259:1;6255;6250:3;6246:11;6242:19;6234:6;6230:32;6219:9;6212:51;6193:4;6282:2;6320:6;6315:2;6304:9;6300:18;6293:34;6363:2;6358;6347:9;6343:18;6336:30;6395:6;6389:13;6438:6;6433:2;6422:9;6418:18;6411:34;6463:1;6473:141;6487:6;6484:1;6481:13;6473:141;;;6583:14;;;6579:23;;6573:30;6548:17;;;6567:3;6544:27;6537:67;6502:10;;6473:141;;;6632:6;6629:1;6626:13;6623:92;;;6703:1;6697:3;6688:6;6677:9;6673:22;6669:32;6662:43;6623:92;-1:-1:-1;6776:2:5;6755:15;-1:-1:-1;;6751:29:5;6736:45;;;;6783:3;6732:55;;6027:766;-1:-1:-1;;;;;6027:766:5:o;6798:277::-;6865:6;6918:2;6906:9;6897:7;6893:23;6889:32;6886:52;;;6934:1;6931;6924:12;6886:52;6966:9;6960:16;7019:5;7012:13;7005:21;6998:5;6995:32;6985:60;;7041:1;7038;7031:12;7080:128;7120:3;7151:1;7147:6;7144:1;7141:13;7138:39;;;7157:18;;:::i;:::-;-1:-1:-1;7193:9:5;;7080:128::o;7213:112::-;7245:1;7271;7261:35;;7276:18;;:::i;:::-;-1:-1:-1;7310:9:5;;7213:112::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    139,
    2900
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4437152A EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x638C0637 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x65372147 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x180 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x9E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x945 JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0xF4 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19E JUMPI PUSH2 0x19E PUSH2 0x967 JUMP JUMPDEST EQ PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND ISZERO DUP1 PUSH2 0x1D6 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x222 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E6720666F726D6174206F662067756573732076616C75650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x143 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF DUP5 AND MUL OR SWAP1 SSTORE PUSH2 0x242 PUSH2 0x5CA JUMP JUMPDEST CALLVALUE GT ISZERO PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x596F75722062696420697320746F6F20626967 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x143 JUMP JUMPDEST CALLVALUE PUSH1 0x6 DUP2 SWAP1 SSTORE SELFBALANCE EQ PUSH2 0x2EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C616E6365206F6620636F6E7472616374206973206E6F7420657175616C PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x81D1BC81D1A1948189A59 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x143 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x2 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x200 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 CALLER MUL OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x377 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x37C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20776173206E6F74207375636365737366756C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x143 JUMP JUMPDEST SELFBALANCE ISZERO PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616C6C20455448207472616E7366657272656420746F207468652070 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1BDBDB PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x143 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST LT ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F7420656E6F756768204C494E4B PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x143 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x503 PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH2 0x5EB JUMP JUMPDEST SWAP1 POP PUSH32 0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E DUP2 PUSH1 0x40 MLOAD PUSH2 0x536 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x143 JUMP JUMPDEST PUSH2 0x5C6 DUP3 DUP3 PUSH2 0x765 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x5E6 SWAP1 PUSH1 0x32 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE PUSH2 0xA09 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x65B SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0xA89 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP9 SWAP1 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP7 DUP5 MSTORE SWAP3 SWAP1 SWAP2 MSTORE PUSH2 0x725 SWAP1 PUSH1 0x1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x783 JUMPI PUSH2 0x783 PUSH2 0x967 JUMP JUMPDEST EQ PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x7B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BF PUSH1 0x2 DUP3 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV SWAP1 SWAP2 AND SWAP1 SUB PUSH2 0x856 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4E958D05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP4 DIV DUP4 AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP5 ADD MSTORE AND SWAP1 PUSH4 0x4E958D05 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x851 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF DUP1 DUP7 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP5 DIV SWAP1 SWAP4 AND PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x753342EA4B32F4D5DE53502A8E9A7F7D91BBC2B0DE37A9D3F79AFEA8F96E01B4 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x91B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x934 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x91B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x99F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x9D5 JUMPI PUSH2 0x9D5 PUSH2 0x9A5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA18 JUMPI PUSH2 0xA18 PUSH2 0x9F3 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 DUP2 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA5F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0xA43 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA71 JUMPI PUSH1 0x0 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x80 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x91B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xABE JUMPI PUSH2 0xABE PUSH2 0x9A5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xAD2 JUMPI PUSH2 0xAD2 PUSH2 0x9F3 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 SWAP4 0x4C 0x2C 0xD0 0xF6 0xD1 0x4D PUSH24 0x22A868B31FBE20E014EEAEF0EEA74991FFC47B68FEEDEA64 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        139,
        2900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A"
    },
    "12": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4437152A"
    },
    "25": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "EQ",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F"
    },
    "29": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x638C0637"
    },
    "36": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "EQ",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71"
    },
    "40": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x65372147"
    },
    "47": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x84"
    },
    "51": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x94985DDD"
    },
    "58": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB5"
    },
    "62": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC19D93FB"
    },
    "69": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5"
    },
    "73": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "77": {
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "DUP1",
      "path": "3"
    },
    "78": {
      "first_revert": true,
      "fn": null,
      "offset": [
        139,
        2900
      ],
      "op": "REVERT",
      "path": "3"
    },
    "79": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "80": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "81": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "DUP1",
      "path": "3"
    },
    "82": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "83": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B"
    },
    "86": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "89": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "DUP1",
      "path": "3"
    },
    "90": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "REVERT",
      "path": "3"
    },
    "91": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "92": {
      "op": "POP"
    },
    "93": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F"
    },
    "96": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A"
    },
    "99": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "100": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "102": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8F2"
    },
    "105": {
      "fn": "CoinToss.setPool",
      "jump": "i",
      "offset": [
        1040,
        1160
      ],
      "op": "JUMP",
      "path": "3"
    },
    "106": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "107": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "110": {
      "fn": "CoinToss.setPool",
      "jump": "i",
      "offset": [
        1040,
        1160
      ],
      "op": "JUMP",
      "path": "3"
    },
    "111": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "112": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "STOP",
      "path": "3"
    },
    "113": {
      "fn": "CoinToss.flip",
      "offset": [
        1271,
        2324
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "114": {
      "fn": "CoinToss.flip",
      "offset": [
        1271,
        2324
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F"
    },
    "117": {
      "fn": "CoinToss.flip",
      "offset": [
        1271,
        2324
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7F"
    },
    "120": {
      "fn": "CoinToss.flip",
      "offset": [
        1271,
        2324
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "121": {
      "fn": "CoinToss.flip",
      "offset": [
        1271,
        2324
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "123": {
      "fn": "CoinToss.flip",
      "offset": [
        1271,
        2324
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x922"
    },
    "126": {
      "fn": "CoinToss.flip",
      "jump": "i",
      "offset": [
        1271,
        2324
      ],
      "op": "JUMP",
      "path": "3"
    },
    "127": {
      "fn": "CoinToss.flip",
      "offset": [
        1271,
        2324
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "128": {
      "fn": "CoinToss.flip",
      "offset": [
        1271,
        2324
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x180"
    },
    "131": {
      "fn": "CoinToss.flip",
      "jump": "i",
      "offset": [
        1271,
        2324
      ],
      "op": "JUMP",
      "path": "3"
    },
    "132": {
      "offset": [
        208,
        227
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "133": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "134": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "DUP1",
      "path": "3"
    },
    "135": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "136": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x90"
    },
    "139": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "140": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "142": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "DUP1",
      "path": "3"
    },
    "143": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "REVERT",
      "path": "3"
    },
    "144": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "145": {
      "op": "POP"
    },
    "146": {
      "offset": [
        208,
        227
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "148": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "149": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E"
    },
    "152": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "153": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "155": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "AND",
      "path": "3"
    },
    "156": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "DUP2",
      "path": "3"
    },
    "157": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "JUMP",
      "path": "3"
    },
    "158": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "159": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "161": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "162": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "164": {
      "op": "SWAP1"
    },
    "165": {
      "op": "SWAP2"
    },
    "166": {
      "op": "AND"
    },
    "167": {
      "op": "DUP2"
    },
    "168": {
      "op": "MSTORE"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "171": {
      "op": "ADD"
    },
    "172": {
      "offset": [
        208,
        227
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "173": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "175": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "176": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "DUP1",
      "path": "3"
    },
    "177": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "178": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "SUB",
      "path": "3"
    },
    "179": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "180": {
      "fn": "CoinToss.flip",
      "offset": [
        208,
        227
      ],
      "op": "RETURN",
      "path": "3"
    },
    "181": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "182": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "183": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "185": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "188": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "189": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "191": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "DUP1",
      "path": "0"
    },
    "192": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "REVERT",
      "path": "0"
    },
    "193": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "op": "POP"
    },
    "195": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "198": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0"
    },
    "201": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "202": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "204": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x945"
    },
    "207": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "208": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "209": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x544"
    },
    "212": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "213": {
      "offset": [
        485,
        503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "214": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "215": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "216": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "217": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE1"
    },
    "220": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "221": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "223": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "224": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "REVERT",
      "path": "3"
    },
    "225": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "226": {
      "op": "POP"
    },
    "227": {
      "offset": [
        485,
        503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "229": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "230": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF4"
    },
    "233": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "234": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "237": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "238": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "DIV",
      "path": "3"
    },
    "239": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "241": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "AND",
      "path": "3"
    },
    "242": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "243": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "JUMP",
      "path": "3"
    },
    "244": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "245": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "247": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "248": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAC"
    },
    "251": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "252": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "253": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        485,
        503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x97D"
    },
    "256": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        485,
        503
      ],
      "op": "JUMP",
      "path": "3"
    },
    "257": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "258": {
      "offset": [
        997,
        1002
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "260": {
      "fn": "CoinToss.setPool",
      "offset": [
        997,
        1002
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "267": {
      "op": "SHL"
    },
    "268": {
      "op": "SUB"
    },
    "269": {
      "offset": [
        997,
        1002
      ],
      "op": "AND",
      "path": "3"
    },
    "270": {
      "offset": [
        983,
        993
      ],
      "op": "CALLER",
      "path": "3"
    },
    "271": {
      "offset": [
        983,
        1002
      ],
      "op": "EQ",
      "path": "3"
    },
    "272": {
      "offset": [
        975,
        1016
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14C"
    },
    "275": {
      "offset": [
        975,
        1016
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "276": {
      "fn": "CoinToss.setPool",
      "offset": [
        975,
        1016
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "278": {
      "fn": "CoinToss.setPool",
      "offset": [
        975,
        1016
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "279": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "283": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "285": {
      "op": "SHL"
    },
    "286": {
      "offset": [
        975,
        1016
      ],
      "op": "DUP2",
      "path": "3"
    },
    "287": {
      "fn": "CoinToss.setPool",
      "offset": [
        975,
        1016
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "290": {
      "offset": [
        975,
        1016
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "292": {
      "fn": "CoinToss.setPool",
      "offset": [
        975,
        1016
      ],
      "op": "DUP3",
      "path": "3"
    },
    "293": {
      "fn": "CoinToss.setPool",
      "offset": [
        975,
        1016
      ],
      "op": "ADD",
      "path": "3"
    },
    "294": {
      "op": "MSTORE"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "299": {
      "op": "DUP3"
    },
    "300": {
      "op": "ADD"
    },
    "301": {
      "op": "MSTORE"
    },
    "302": {
      "op": "PUSH9",
      "value": "0x2737BA1037BBB732B9"
    },
    "312": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "314": {
      "op": "SHL"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "317": {
      "op": "DUP3"
    },
    "318": {
      "op": "ADD"
    },
    "319": {
      "op": "MSTORE"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "322": {
      "op": "ADD"
    },
    "323": {
      "offset": [
        975,
        1016
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "324": {
      "fn": "CoinToss.setPool",
      "offset": [
        975,
        1016
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "326": {
      "fn": "CoinToss.setPool",
      "offset": [
        975,
        1016
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "327": {
      "fn": "CoinToss.setPool",
      "offset": [
        975,
        1016
      ],
      "op": "DUP1",
      "path": "3"
    },
    "328": {
      "fn": "CoinToss.setPool",
      "offset": [
        975,
        1016
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "329": {
      "fn": "CoinToss.setPool",
      "offset": [
        975,
        1016
      ],
      "op": "SUB",
      "path": "3"
    },
    "330": {
      "fn": "CoinToss.setPool",
      "offset": [
        975,
        1016
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "331": {
      "fn": "CoinToss.setPool",
      "offset": [
        975,
        1016
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "332": {
      "fn": "CoinToss.setPool",
      "offset": [
        975,
        1016
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "333": {
      "fn": "CoinToss.setPool",
      "offset": [
        1107,
        1111
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x4"
    },
    "335": {
      "fn": "CoinToss.setPool",
      "offset": [
        1107,
        1125
      ],
      "op": "DUP1",
      "path": "3"
    },
    "336": {
      "fn": "CoinToss.setPool",
      "offset": [
        1107,
        1125
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "343": {
      "op": "SHL"
    },
    "344": {
      "op": "SUB"
    },
    "345": {
      "op": "NOT"
    },
    "346": {
      "fn": "CoinToss.setPool",
      "offset": [
        1107,
        1125
      ],
      "op": "AND",
      "path": "3"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "353": {
      "op": "SHL"
    },
    "354": {
      "op": "SUB"
    },
    "355": {
      "fn": "CoinToss.setPool",
      "offset": [
        1107,
        1125
      ],
      "op": "DUP4",
      "path": "3"
    },
    "356": {
      "fn": "CoinToss.setPool",
      "offset": [
        1107,
        1125
      ],
      "op": "AND",
      "path": "3"
    },
    "357": {
      "fn": "CoinToss.setPool",
      "offset": [
        1107,
        1125
      ],
      "op": "OR",
      "path": "3"
    },
    "358": {
      "fn": "CoinToss.setPool",
      "offset": [
        1107,
        1125
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "359": {
      "fn": "CoinToss.setPool",
      "offset": [
        1107,
        1125
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "360": {
      "fn": "CoinToss.setPool",
      "offset": [
        1135,
        1140
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x8"
    },
    "362": {
      "fn": "CoinToss.setPool",
      "offset": [
        1135,
        1153
      ],
      "op": "DUP1",
      "path": "3"
    },
    "363": {
      "fn": "CoinToss.setPool",
      "offset": [
        1135,
        1153
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "366": {
      "op": "SWAP2"
    },
    "367": {
      "fn": "CoinToss.setPool",
      "offset": [
        1135,
        1140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "368": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "371": {
      "op": "NOT"
    },
    "372": {
      "fn": "CoinToss.setPool",
      "offset": [
        1135,
        1153
      ],
      "op": "AND",
      "path": "3"
    },
    "373": {
      "fn": "CoinToss.setPool",
      "offset": [
        1107,
        1125
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "376": {
      "op": "DUP4"
    },
    "377": {
      "fn": "CoinToss.setPool",
      "offset": [
        1135,
        1153
      ],
      "op": "MUL",
      "path": "3"
    },
    "378": {
      "fn": "CoinToss.setPool",
      "offset": [
        1135,
        1153
      ],
      "op": "OR",
      "path": "3"
    },
    "379": {
      "fn": "CoinToss.setPool",
      "offset": [
        1135,
        1153
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "380": {
      "fn": "CoinToss.setPool",
      "offset": [
        1135,
        1153
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "381": {
      "fn": "CoinToss.setPool",
      "offset": [
        1135,
        1153
      ],
      "op": "POP",
      "path": "3"
    },
    "382": {
      "fn": "CoinToss.setPool",
      "offset": [
        1040,
        1160
      ],
      "op": "POP",
      "path": "3"
    },
    "383": {
      "fn": "CoinToss.setPool",
      "jump": "o",
      "offset": [
        1040,
        1160
      ],
      "op": "JUMP",
      "path": "3"
    },
    "384": {
      "fn": "CoinToss.flip",
      "offset": [
        1271,
        2324
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "385": {
      "fn": "CoinToss.flip",
      "offset": [
        1349,
        1359
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x1"
    },
    "387": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "389": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1345
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "390": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1345
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "393": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1345
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "394": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1345
      ],
      "op": "DIV",
      "path": "3"
    },
    "395": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "397": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1345
      ],
      "op": "AND",
      "path": "3"
    },
    "398": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1359
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "400": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1359
      ],
      "op": "DUP2",
      "path": "3"
    },
    "401": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1359
      ],
      "op": "GT",
      "path": "3"
    },
    "402": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1359
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "403": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1359
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19E"
    },
    "406": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1359
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "407": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1359
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19E"
    },
    "410": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1359
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x967"
    },
    "413": {
      "fn": "CoinToss.flip",
      "jump": "i",
      "offset": [
        1340,
        1359
      ],
      "op": "JUMP",
      "path": "3"
    },
    "414": {
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1359
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "415": {
      "branch": 34,
      "fn": "CoinToss.flip",
      "offset": [
        1340,
        1359
      ],
      "op": "EQ",
      "path": "3"
    },
    "416": {
      "fn": "CoinToss.flip",
      "offset": [
        1332,
        1360
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A8"
    },
    "419": {
      "branch": 34,
      "fn": "CoinToss.flip",
      "offset": [
        1332,
        1360
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "420": {
      "fn": "CoinToss.flip",
      "offset": [
        1332,
        1360
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "422": {
      "fn": "CoinToss.flip",
      "offset": [
        1332,
        1360
      ],
      "op": "DUP1",
      "path": "3"
    },
    "423": {
      "fn": "CoinToss.flip",
      "offset": [
        1332,
        1360
      ],
      "op": "REVERT",
      "path": "3"
    },
    "424": {
      "fn": "CoinToss.flip",
      "offset": [
        1332,
        1360
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "425": {
      "fn": "CoinToss.flip",
      "offset": [
        1378,
        1392
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x2"
    },
    "427": {
      "fn": "CoinToss.flip",
      "offset": [
        1378,
        1392
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "428": {
      "fn": "CoinToss.flip",
      "offset": [
        1378,
        1392
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "431": {
      "fn": "CoinToss.flip",
      "offset": [
        1378,
        1392
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "432": {
      "fn": "CoinToss.flip",
      "offset": [
        1378,
        1392
      ],
      "op": "DIV",
      "path": "3"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "439": {
      "op": "SHL"
    },
    "440": {
      "op": "SUB"
    },
    "441": {
      "fn": "CoinToss.flip",
      "offset": [
        1378,
        1392
      ],
      "op": "AND",
      "path": "3"
    },
    "442": {
      "branch": 35,
      "fn": "CoinToss.flip",
      "offset": [
        1378,
        1406
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "443": {
      "fn": "CoinToss.flip",
      "offset": [
        1370,
        1407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C3"
    },
    "446": {
      "branch": 35,
      "fn": "CoinToss.flip",
      "offset": [
        1370,
        1407
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "447": {
      "fn": "CoinToss.flip",
      "offset": [
        1370,
        1407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "449": {
      "fn": "CoinToss.flip",
      "offset": [
        1370,
        1407
      ],
      "op": "DUP1",
      "path": "3"
    },
    "450": {
      "fn": "CoinToss.flip",
      "offset": [
        1370,
        1407
      ],
      "op": "REVERT",
      "path": "3"
    },
    "451": {
      "fn": "CoinToss.flip",
      "offset": [
        1370,
        1407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "452": {
      "fn": "CoinToss.flip",
      "offset": [
        1439,
        1456
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0xFF"
    },
    "454": {
      "fn": "CoinToss.flip",
      "offset": [
        1439,
        1456
      ],
      "op": "DUP2",
      "path": "3"
    },
    "455": {
      "fn": "CoinToss.flip",
      "offset": [
        1439,
        1456
      ],
      "op": "AND",
      "path": "3"
    },
    "456": {
      "fn": "CoinToss.flip",
      "offset": [
        1439,
        1456
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "457": {
      "branch": 36,
      "fn": "CoinToss.flip",
      "offset": [
        1439,
        1456
      ],
      "op": "DUP1",
      "path": "3"
    },
    "458": {
      "fn": "CoinToss.flip",
      "offset": [
        1439,
        1477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D6"
    },
    "461": {
      "branch": 36,
      "fn": "CoinToss.flip",
      "offset": [
        1439,
        1477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "462": {
      "fn": "CoinToss.flip",
      "offset": [
        1439,
        1477
      ],
      "op": "POP",
      "path": "3"
    },
    "463": {
      "fn": "CoinToss.flip",
      "offset": [
        1460,
        1472
      ],
      "op": "DUP1",
      "path": "3"
    },
    "464": {
      "fn": "CoinToss.flip",
      "offset": [
        1460,
        1477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "466": {
      "fn": "CoinToss.flip",
      "offset": [
        1460,
        1477
      ],
      "op": "AND",
      "path": "3"
    },
    "467": {
      "fn": "CoinToss.flip",
      "offset": [
        1476,
        1477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "469": {
      "branch": 37,
      "fn": "CoinToss.flip",
      "offset": [
        1460,
        1477
      ],
      "op": "EQ",
      "path": "3"
    },
    "470": {
      "fn": "CoinToss.flip",
      "offset": [
        1439,
        1477
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "471": {
      "fn": "CoinToss.flip",
      "offset": [
        1418,
        1530
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x222"
    },
    "474": {
      "branch": 37,
      "fn": "CoinToss.flip",
      "offset": [
        1418,
        1530
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "475": {
      "fn": "CoinToss.flip",
      "offset": [
        1418,
        1530
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "477": {
      "fn": "CoinToss.flip",
      "offset": [
        1418,
        1530
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "478": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "482": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "484": {
      "op": "SHL"
    },
    "485": {
      "fn": "CoinToss.flip",
      "offset": [
        1418,
        1530
      ],
      "op": "DUP2",
      "path": "3"
    },
    "486": {
      "fn": "CoinToss.flip",
      "offset": [
        1418,
        1530
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "489": {
      "fn": "CoinToss.flip",
      "offset": [
        1418,
        1530
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "491": {
      "fn": "CoinToss.flip",
      "offset": [
        1418,
        1530
      ],
      "op": "DUP3",
      "path": "3"
    },
    "492": {
      "fn": "CoinToss.flip",
      "offset": [
        1418,
        1530
      ],
      "op": "ADD",
      "path": "3"
    },
    "493": {
      "op": "MSTORE"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "498": {
      "op": "DUP3"
    },
    "499": {
      "op": "ADD"
    },
    "500": {
      "op": "MSTORE"
    },
    "501": {
      "op": "PUSH32",
      "value": "0x57726F6E6720666F726D6174206F662067756573732076616C75650000000000"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "536": {
      "op": "DUP3"
    },
    "537": {
      "op": "ADD"
    },
    "538": {
      "op": "MSTORE"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "541": {
      "op": "ADD"
    },
    "542": {
      "fn": "CoinToss.flip",
      "offset": [
        1418,
        1530
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x143"
    },
    "545": {
      "op": "JUMP"
    },
    "546": {
      "fn": "CoinToss.flip",
      "offset": [
        1418,
        1530
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "547": {
      "fn": "CoinToss.flip",
      "offset": [
        1540,
        1551
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x5"
    },
    "549": {
      "fn": "CoinToss.flip",
      "offset": [
        1540,
        1566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "550": {
      "fn": "CoinToss.flip",
      "offset": [
        1540,
        1566
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "551": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "555": {
      "op": "SHL"
    },
    "556": {
      "op": "NOT"
    },
    "557": {
      "fn": "CoinToss.flip",
      "offset": [
        1540,
        1566
      ],
      "op": "AND",
      "path": "3"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "562": {
      "op": "SHL"
    },
    "563": {
      "fn": "CoinToss.flip",
      "offset": [
        1540,
        1566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "565": {
      "fn": "CoinToss.flip",
      "offset": [
        1540,
        1566
      ],
      "op": "DUP5",
      "path": "3"
    },
    "566": {
      "fn": "CoinToss.flip",
      "offset": [
        1540,
        1566
      ],
      "op": "AND",
      "path": "3"
    },
    "567": {
      "fn": "CoinToss.flip",
      "offset": [
        1540,
        1566
      ],
      "op": "MUL",
      "path": "3"
    },
    "568": {
      "fn": "CoinToss.flip",
      "offset": [
        1540,
        1566
      ],
      "op": "OR",
      "path": "3"
    },
    "569": {
      "fn": "CoinToss.flip",
      "offset": [
        1540,
        1566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "570": {
      "fn": "CoinToss.flip",
      "offset": [
        1540,
        1566
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "571": {
      "fn": "CoinToss.flip",
      "offset": [
        1598,
        1610
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 6,
      "value": "0x242"
    },
    "574": {
      "fn": "CoinToss.flip",
      "offset": [
        1598,
        1608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5CA"
    },
    "577": {
      "fn": "CoinToss.flip",
      "jump": "i",
      "offset": [
        1598,
        1610
      ],
      "op": "JUMP",
      "path": "3"
    },
    "578": {
      "fn": "CoinToss.flip",
      "offset": [
        1598,
        1610
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "579": {
      "fn": "CoinToss.flip",
      "offset": [
        1585,
        1594
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "580": {
      "fn": "CoinToss.flip",
      "offset": [
        1585,
        1610
      ],
      "op": "GT",
      "path": "3"
    },
    "581": {
      "branch": 38,
      "fn": "CoinToss.flip",
      "offset": [
        1585,
        1610
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "582": {
      "fn": "CoinToss.flip",
      "offset": [
        1577,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x287"
    },
    "585": {
      "branch": 38,
      "fn": "CoinToss.flip",
      "offset": [
        1577,
        1634
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "586": {
      "fn": "CoinToss.flip",
      "offset": [
        1577,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "588": {
      "fn": "CoinToss.flip",
      "offset": [
        1577,
        1634
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "fn": "CoinToss.flip",
      "offset": [
        1577,
        1634
      ],
      "op": "DUP2",
      "path": "3"
    },
    "597": {
      "fn": "CoinToss.flip",
      "offset": [
        1577,
        1634
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "600": {
      "fn": "CoinToss.flip",
      "offset": [
        1577,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "602": {
      "fn": "CoinToss.flip",
      "offset": [
        1577,
        1634
      ],
      "op": "DUP3",
      "path": "3"
    },
    "603": {
      "fn": "CoinToss.flip",
      "offset": [
        1577,
        1634
      ],
      "op": "ADD",
      "path": "3"
    },
    "604": {
      "op": "MSTORE"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "609": {
      "op": "DUP3"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "op": "MSTORE"
    },
    "612": {
      "op": "PUSH19",
      "value": "0x596F75722062696420697320746F6F20626967"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "634": {
      "op": "SHL"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "637": {
      "op": "DUP3"
    },
    "638": {
      "op": "ADD"
    },
    "639": {
      "op": "MSTORE"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "642": {
      "op": "ADD"
    },
    "643": {
      "fn": "CoinToss.flip",
      "offset": [
        1577,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x143"
    },
    "646": {
      "op": "JUMP"
    },
    "647": {
      "fn": "CoinToss.flip",
      "offset": [
        1577,
        1634
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "648": {
      "fn": "CoinToss.flip",
      "offset": [
        1650,
        1659
      ],
      "op": "CALLVALUE",
      "path": "3",
      "statement": 7
    },
    "649": {
      "fn": "CoinToss.flip",
      "offset": [
        1644,
        1647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "651": {
      "fn": "CoinToss.flip",
      "offset": [
        1644,
        1659
      ],
      "op": "DUP2",
      "path": "3"
    },
    "652": {
      "fn": "CoinToss.flip",
      "offset": [
        1644,
        1659
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "653": {
      "fn": "CoinToss.flip",
      "offset": [
        1644,
        1659
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "654": {
      "fn": "CoinToss.flip",
      "offset": [
        1678,
        1699
      ],
      "op": "SELFBALANCE",
      "path": "3",
      "statement": 8
    },
    "655": {
      "branch": 39,
      "fn": "CoinToss.flip",
      "offset": [
        1678,
        1706
      ],
      "op": "EQ",
      "path": "3"
    },
    "656": {
      "fn": "CoinToss.flip",
      "offset": [
        1670,
        1754
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EF"
    },
    "659": {
      "branch": 39,
      "fn": "CoinToss.flip",
      "offset": [
        1670,
        1754
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "660": {
      "fn": "CoinToss.flip",
      "offset": [
        1670,
        1754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "662": {
      "fn": "CoinToss.flip",
      "offset": [
        1670,
        1754
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "669": {
      "op": "SHL"
    },
    "670": {
      "fn": "CoinToss.flip",
      "offset": [
        1670,
        1754
      ],
      "op": "DUP2",
      "path": "3"
    },
    "671": {
      "fn": "CoinToss.flip",
      "offset": [
        1670,
        1754
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "674": {
      "fn": "CoinToss.flip",
      "offset": [
        1670,
        1754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "676": {
      "fn": "CoinToss.flip",
      "offset": [
        1670,
        1754
      ],
      "op": "DUP3",
      "path": "3"
    },
    "677": {
      "fn": "CoinToss.flip",
      "offset": [
        1670,
        1754
      ],
      "op": "ADD",
      "path": "3"
    },
    "678": {
      "op": "MSTORE"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "683": {
      "op": "DUP3"
    },
    "684": {
      "op": "ADD"
    },
    "685": {
      "op": "MSTORE"
    },
    "686": {
      "op": "PUSH32",
      "value": "0x42616C616E6365206F6620636F6E7472616374206973206E6F7420657175616C"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "721": {
      "op": "DUP3"
    },
    "722": {
      "op": "ADD"
    },
    "723": {
      "op": "MSTORE"
    },
    "724": {
      "op": "PUSH11",
      "value": "0x81D1BC81D1A1948189A59"
    },
    "736": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "738": {
      "op": "SHL"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "741": {
      "op": "DUP3"
    },
    "742": {
      "op": "ADD"
    },
    "743": {
      "op": "MSTORE"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "746": {
      "op": "ADD"
    },
    "747": {
      "fn": "CoinToss.flip",
      "offset": [
        1670,
        1754
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x143"
    },
    "750": {
      "op": "JUMP"
    },
    "751": {
      "fn": "CoinToss.flip",
      "offset": [
        1670,
        1754
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "752": {
      "fn": "CoinToss.flip",
      "offset": [
        1773,
        1776
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x6"
    },
    "754": {
      "fn": "CoinToss.flip",
      "offset": [
        1773,
        1776
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "755": {
      "fn": "CoinToss.flip",
      "offset": [
        1773,
        1780
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FD"
    },
    "758": {
      "fn": "CoinToss.flip",
      "offset": [
        1773,
        1780
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "759": {
      "fn": "CoinToss.flip",
      "offset": [
        1779,
        1780
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "761": {
      "fn": "CoinToss.flip",
      "offset": [
        1773,
        1780
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9BB"
    },
    "764": {
      "fn": "CoinToss.flip",
      "jump": "i",
      "offset": [
        1773,
        1780
      ],
      "op": "JUMP",
      "path": "3"
    },
    "765": {
      "fn": "CoinToss.flip",
      "offset": [
        1773,
        1780
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "766": {
      "fn": "CoinToss.flip",
      "offset": [
        1765,
        1770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "768": {
      "fn": "CoinToss.flip",
      "offset": [
        1765,
        1780
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "769": {
      "fn": "CoinToss.flip",
      "offset": [
        1791,
        1796
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x8"
    },
    "771": {
      "fn": "CoinToss.flip",
      "offset": [
        1791,
        1811
      ],
      "op": "DUP1",
      "path": "3"
    },
    "772": {
      "fn": "CoinToss.flip",
      "offset": [
        1791,
        1811
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "773": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "776": {
      "op": "NOT"
    },
    "777": {
      "fn": "CoinToss.flip",
      "offset": [
        1791,
        1811
      ],
      "op": "AND",
      "path": "3"
    },
    "778": {
      "fn": "CoinToss.flip",
      "offset": [
        1791,
        1811
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x200"
    },
    "781": {
      "fn": "CoinToss.flip",
      "offset": [
        1791,
        1811
      ],
      "op": "OR",
      "path": "3"
    },
    "782": {
      "fn": "CoinToss.flip",
      "offset": [
        1791,
        1811
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "783": {
      "fn": "CoinToss.flip",
      "offset": [
        1791,
        1811
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "784": {
      "fn": "CoinToss.flip",
      "offset": [
        1799,
        1811
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "786": {
      "fn": "CoinToss.flip",
      "offset": [
        1821,
        1857
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 11
    },
    "787": {
      "fn": "CoinToss.flip",
      "offset": [
        1821,
        1857
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "788": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "793": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "795": {
      "op": "SHL"
    },
    "796": {
      "op": "SUB"
    },
    "797": {
      "op": "NOT"
    },
    "798": {
      "fn": "CoinToss.flip",
      "offset": [
        1821,
        1857
      ],
      "op": "AND",
      "path": "3"
    },
    "799": {
      "fn": "CoinToss.flip",
      "offset": [
        1791,
        1811
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "802": {
      "fn": "CoinToss.flip",
      "offset": [
        1846,
        1856
      ],
      "op": "CALLER",
      "path": "3"
    },
    "803": {
      "fn": "CoinToss.flip",
      "offset": [
        1821,
        1857
      ],
      "op": "MUL",
      "path": "3"
    },
    "804": {
      "fn": "CoinToss.flip",
      "offset": [
        1821,
        1857
      ],
      "op": "OR",
      "path": "3"
    },
    "805": {
      "fn": "CoinToss.flip",
      "offset": [
        1821,
        1857
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "806": {
      "fn": "CoinToss.flip",
      "offset": [
        1821,
        1857
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "807": {
      "fn": "CoinToss.flip",
      "offset": [
        1917,
        1921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "809": {
      "fn": "CoinToss.flip",
      "offset": [
        1917,
        1921
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "810": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "812": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "815": {
      "op": "SWAP2"
    },
    "816": {
      "op": "DUP3"
    },
    "817": {
      "op": "SWAP2"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "824": {
      "op": "SHL"
    },
    "825": {
      "op": "SUB"
    },
    "826": {
      "fn": "CoinToss.flip",
      "offset": [
        1917,
        1921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "827": {
      "fn": "CoinToss.flip",
      "offset": [
        1917,
        1921
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "828": {
      "fn": "CoinToss.flip",
      "offset": [
        1917,
        1921
      ],
      "op": "AND",
      "path": "3"
    },
    "829": {
      "fn": "CoinToss.flip",
      "offset": [
        1917,
        1921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "830": {
      "fn": "CoinToss.flip",
      "offset": [
        1936,
        1957
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "831": {
      "fn": "CoinToss.flip",
      "offset": [
        1936,
        1957
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "832": {
      "op": "DUP4"
    },
    "833": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "834": {
      "op": "DUP2"
    },
    "835": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "836": {
      "fn": "CoinToss.flip",
      "offset": [
        1936,
        1957
      ],
      "op": "DUP6",
      "path": "3"
    },
    "837": {
      "fn": "CoinToss.flip",
      "offset": [
        1917,
        1921
      ],
      "op": "DUP8",
      "path": "3"
    },
    "838": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "GAS",
      "path": "3"
    },
    "839": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "CALL",
      "path": "3"
    },
    "840": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "841": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "POP",
      "path": "3"
    },
    "842": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "POP",
      "path": "3"
    },
    "843": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "POP",
      "path": "3"
    },
    "844": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "845": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "DUP1",
      "path": "3"
    },
    "846": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "848": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "849": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "EQ",
      "path": "3"
    },
    "850": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x377"
    },
    "853": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "854": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "856": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "857": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "858": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "POP",
      "path": "3"
    },
    "859": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "861": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "NOT",
      "path": "3"
    },
    "862": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "864": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "865": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "ADD",
      "path": "3"
    },
    "866": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "AND",
      "path": "3"
    },
    "867": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "868": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "ADD",
      "path": "3"
    },
    "869": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "871": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "872": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "873": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "874": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "875": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "876": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "878": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "880": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "DUP5",
      "path": "3"
    },
    "881": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "ADD",
      "path": "3"
    },
    "882": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "883": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37C"
    },
    "886": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "JUMP",
      "path": "3"
    },
    "887": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "888": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "890": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "891": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "POP",
      "path": "3"
    },
    "892": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "893": {
      "fn": "CoinToss.flip",
      "offset": [
        1901,
        1984
      ],
      "op": "POP",
      "path": "3"
    },
    "894": {
      "fn": "CoinToss.flip",
      "offset": [
        1868,
        1984
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "895": {
      "fn": "CoinToss.flip",
      "offset": [
        1868,
        1984
      ],
      "op": "POP",
      "path": "3"
    },
    "896": {
      "fn": "CoinToss.flip",
      "offset": [
        1868,
        1984
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "897": {
      "fn": "CoinToss.flip",
      "offset": [
        1868,
        1984
      ],
      "op": "POP",
      "path": "3"
    },
    "898": {
      "branch": 40,
      "fn": "CoinToss.flip",
      "offset": [
        2002,
        2006
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 12
    },
    "899": {
      "fn": "CoinToss.flip",
      "offset": [
        1994,
        2042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CE"
    },
    "902": {
      "branch": 40,
      "fn": "CoinToss.flip",
      "offset": [
        1994,
        2042
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "903": {
      "fn": "CoinToss.flip",
      "offset": [
        1994,
        2042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "905": {
      "fn": "CoinToss.flip",
      "offset": [
        1994,
        2042
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "906": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "910": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "912": {
      "op": "SHL"
    },
    "913": {
      "fn": "CoinToss.flip",
      "offset": [
        1994,
        2042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "914": {
      "fn": "CoinToss.flip",
      "offset": [
        1994,
        2042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "917": {
      "fn": "CoinToss.flip",
      "offset": [
        1994,
        2042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "919": {
      "fn": "CoinToss.flip",
      "offset": [
        1994,
        2042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "920": {
      "fn": "CoinToss.flip",
      "offset": [
        1994,
        2042
      ],
      "op": "ADD",
      "path": "3"
    },
    "921": {
      "op": "MSTORE"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "926": {
      "op": "DUP3"
    },
    "927": {
      "op": "ADD"
    },
    "928": {
      "op": "MSTORE"
    },
    "929": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E20776173206E6F74207375636365737366756C6C00"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "964": {
      "op": "DUP3"
    },
    "965": {
      "op": "ADD"
    },
    "966": {
      "op": "MSTORE"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "969": {
      "op": "ADD"
    },
    "970": {
      "fn": "CoinToss.flip",
      "offset": [
        1994,
        2042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x143"
    },
    "973": {
      "op": "JUMP"
    },
    "974": {
      "fn": "CoinToss.flip",
      "offset": [
        1994,
        2042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "975": {
      "fn": "CoinToss.flip",
      "offset": [
        2060,
        2081
      ],
      "op": "SELFBALANCE",
      "path": "3",
      "statement": 13
    },
    "976": {
      "branch": 41,
      "fn": "CoinToss.flip",
      "offset": [
        2060,
        2086
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "977": {
      "fn": "CoinToss.flip",
      "offset": [
        2052,
        2126
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x428"
    },
    "980": {
      "branch": 41,
      "fn": "CoinToss.flip",
      "offset": [
        2052,
        2126
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "981": {
      "fn": "CoinToss.flip",
      "offset": [
        2052,
        2126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "983": {
      "fn": "CoinToss.flip",
      "offset": [
        2052,
        2126
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "990": {
      "op": "SHL"
    },
    "991": {
      "fn": "CoinToss.flip",
      "offset": [
        2052,
        2126
      ],
      "op": "DUP2",
      "path": "3"
    },
    "992": {
      "fn": "CoinToss.flip",
      "offset": [
        2052,
        2126
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "995": {
      "fn": "CoinToss.flip",
      "offset": [
        2052,
        2126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "997": {
      "fn": "CoinToss.flip",
      "offset": [
        2052,
        2126
      ],
      "op": "DUP3",
      "path": "3"
    },
    "998": {
      "fn": "CoinToss.flip",
      "offset": [
        2052,
        2126
      ],
      "op": "ADD",
      "path": "3"
    },
    "999": {
      "op": "MSTORE"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1004": {
      "op": "DUP3"
    },
    "1005": {
      "op": "ADD"
    },
    "1006": {
      "op": "MSTORE"
    },
    "1007": {
      "op": "PUSH32",
      "value": "0x4E6F7420616C6C20455448207472616E7366657272656420746F207468652070"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1042": {
      "op": "DUP3"
    },
    "1043": {
      "op": "ADD"
    },
    "1044": {
      "op": "MSTORE"
    },
    "1045": {
      "op": "PUSH3",
      "value": "0x1BDBDB"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1054": {
      "op": "DUP3"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "op": "MSTORE"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1059": {
      "op": "ADD"
    },
    "1060": {
      "fn": "CoinToss.flip",
      "offset": [
        2052,
        2126
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x143"
    },
    "1063": {
      "op": "JUMP"
    },
    "1064": {
      "fn": "CoinToss.flip",
      "offset": [
        2052,
        2126
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1065": {
      "fn": "CoinToss.flip",
      "offset": [
        2187,
        2190
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x1"
    },
    "1067": {
      "fn": "CoinToss.flip",
      "offset": [
        2187,
        2190
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1068": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1070": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1071": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1078": {
      "op": "SHL"
    },
    "1079": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1080": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1081": {
      "fn": "CoinToss.flip",
      "offset": [
        2177,
        2181
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1082": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1084": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1085": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "ADD",
      "path": "3"
    },
    "1086": {
      "op": "MSTORE"
    },
    "1087": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2158
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1126": {
      "op": "SHL"
    },
    "1127": {
      "op": "SUB"
    },
    "1128": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2168
      ],
      "op": "AND",
      "path": "3"
    },
    "1129": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1130": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2168
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "1135": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1138": {
      "op": "ADD"
    },
    "1139": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1141": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1143": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1144": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1145": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1146": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "SUB",
      "path": "3"
    },
    "1147": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1148": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1149": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "GAS",
      "path": "3"
    },
    "1150": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1151": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1152": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1153": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1154": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x48F"
    },
    "1157": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1158": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1159": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1161": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1162": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1163": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1164": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1166": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1167": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1168": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "POP",
      "path": "3"
    },
    "1169": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "POP",
      "path": "3"
    },
    "1170": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "POP",
      "path": "3"
    },
    "1171": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "POP",
      "path": "3"
    },
    "1172": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1174": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1175": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1176": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1178": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "NOT",
      "path": "3"
    },
    "1179": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1181": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1182": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "ADD",
      "path": "3"
    },
    "1183": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "AND",
      "path": "3"
    },
    "1184": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1185": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "ADD",
      "path": "3"
    },
    "1186": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1187": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1189": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1190": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "POP",
      "path": "3"
    },
    "1191": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1192": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "ADD",
      "path": "3"
    },
    "1193": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1194": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B3"
    },
    "1197": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1198": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1199": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9DA"
    },
    "1202": {
      "fn": "CoinToss.flip",
      "jump": "i",
      "offset": [
        2154,
        2183
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1203": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2183
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1204": {
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2190
      ],
      "op": "LT",
      "path": "3"
    },
    "1205": {
      "branch": 42,
      "fn": "CoinToss.flip",
      "offset": [
        2154,
        2190
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1206": {
      "fn": "CoinToss.flip",
      "offset": [
        2146,
        2210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F3"
    },
    "1209": {
      "branch": 42,
      "fn": "CoinToss.flip",
      "offset": [
        2146,
        2210
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1210": {
      "fn": "CoinToss.flip",
      "offset": [
        2146,
        2210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1212": {
      "fn": "CoinToss.flip",
      "offset": [
        2146,
        2210
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "fn": "CoinToss.flip",
      "offset": [
        2146,
        2210
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1221": {
      "fn": "CoinToss.flip",
      "offset": [
        2146,
        2210
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1224": {
      "fn": "CoinToss.flip",
      "offset": [
        2146,
        2210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1226": {
      "fn": "CoinToss.flip",
      "offset": [
        2146,
        2210
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1227": {
      "fn": "CoinToss.flip",
      "offset": [
        2146,
        2210
      ],
      "op": "ADD",
      "path": "3"
    },
    "1228": {
      "op": "MSTORE"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1233": {
      "op": "DUP3"
    },
    "1234": {
      "op": "ADD"
    },
    "1235": {
      "op": "MSTORE"
    },
    "1236": {
      "op": "PUSH15",
      "value": "0x4E6F7420656E6F756768204C494E4B"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "1254": {
      "op": "SHL"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1257": {
      "op": "DUP3"
    },
    "1258": {
      "op": "ADD"
    },
    "1259": {
      "op": "MSTORE"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1262": {
      "op": "ADD"
    },
    "1263": {
      "fn": "CoinToss.flip",
      "offset": [
        2146,
        2210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x143"
    },
    "1266": {
      "op": "JUMP"
    },
    "1267": {
      "fn": "CoinToss.flip",
      "offset": [
        2146,
        2210
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1268": {
      "fn": "CoinToss.flip",
      "offset": [
        2221,
        2238
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1270": {
      "fn": "CoinToss.flip",
      "offset": [
        2241,
        2272
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x503"
    },
    "1273": {
      "fn": "CoinToss.flip",
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1275": {
      "fn": "CoinToss.flip",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1276": {
      "fn": "CoinToss.flip",
      "offset": [
        2268,
        2271
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1278": {
      "fn": "CoinToss.flip",
      "offset": [
        2268,
        2271
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1279": {
      "fn": "CoinToss.flip",
      "offset": [
        2241,
        2258
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5EB"
    },
    "1282": {
      "fn": "CoinToss.flip",
      "jump": "i",
      "offset": [
        2241,
        2272
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1283": {
      "fn": "CoinToss.flip",
      "offset": [
        2241,
        2272
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1284": {
      "fn": "CoinToss.flip",
      "offset": [
        2221,
        2272
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1285": {
      "fn": "CoinToss.flip",
      "offset": [
        2221,
        2272
      ],
      "op": "POP",
      "path": "3"
    },
    "1286": {
      "fn": "CoinToss.flip",
      "offset": [
        2287,
        2317
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 15,
      "value": "0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E"
    },
    "1319": {
      "fn": "CoinToss.flip",
      "offset": [
        2307,
        2316
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1320": {
      "fn": "CoinToss.flip",
      "offset": [
        2287,
        2317
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1322": {
      "fn": "CoinToss.flip",
      "offset": [
        2287,
        2317
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1323": {
      "fn": "CoinToss.flip",
      "offset": [
        2287,
        2317
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x536"
    },
    "1326": {
      "fn": "CoinToss.flip",
      "offset": [
        2287,
        2317
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1327": {
      "op": "DUP2"
    },
    "1328": {
      "op": "MSTORE"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1331": {
      "op": "ADD"
    },
    "1332": {
      "op": "SWAP1"
    },
    "1333": {
      "op": "JUMP"
    },
    "1334": {
      "fn": "CoinToss.flip",
      "offset": [
        2287,
        2317
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1335": {
      "fn": "CoinToss.flip",
      "offset": [
        2287,
        2317
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1337": {
      "fn": "CoinToss.flip",
      "offset": [
        2287,
        2317
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1338": {
      "fn": "CoinToss.flip",
      "offset": [
        2287,
        2317
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1339": {
      "fn": "CoinToss.flip",
      "offset": [
        2287,
        2317
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1340": {
      "fn": "CoinToss.flip",
      "offset": [
        2287,
        2317
      ],
      "op": "SUB",
      "path": "3"
    },
    "1341": {
      "fn": "CoinToss.flip",
      "offset": [
        2287,
        2317
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1342": {
      "fn": "CoinToss.flip",
      "offset": [
        2287,
        2317
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1343": {
      "fn": "CoinToss.flip",
      "offset": [
        1322,
        2324
      ],
      "op": "POP",
      "path": "3"
    },
    "1344": {
      "fn": "CoinToss.flip",
      "offset": [
        1322,
        2324
      ],
      "op": "POP",
      "path": "3"
    },
    "1345": {
      "fn": "CoinToss.flip",
      "offset": [
        1322,
        2324
      ],
      "op": "POP",
      "path": "3"
    },
    "1346": {
      "fn": "CoinToss.flip",
      "offset": [
        1271,
        2324
      ],
      "op": "POP",
      "path": "3"
    },
    "1347": {
      "fn": "CoinToss.flip",
      "jump": "o",
      "offset": [
        1271,
        2324
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1348": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1349": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9668,
        9678
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 16
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1356": {
      "op": "SHL"
    },
    "1357": {
      "op": "SUB"
    },
    "1358": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9682,
        9696
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "1391": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9668,
        9696
      ],
      "op": "AND",
      "path": "0"
    },
    "1392": {
      "branch": 46,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9668,
        9696
      ],
      "op": "EQ",
      "path": "0"
    },
    "1393": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BC"
    },
    "1396": {
      "branch": 46,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1397": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1399": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1400": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1408": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1411": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1413": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1414": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "ADD",
      "path": "0"
    },
    "1415": {
      "op": "MSTORE"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1420": {
      "op": "DUP3"
    },
    "1421": {
      "op": "ADD"
    },
    "1422": {
      "op": "MSTORE"
    },
    "1423": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "ADD"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143"
    },
    "1467": {
      "op": "JUMP"
    },
    "1468": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1469": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9738,
        9778
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x5C6"
    },
    "1472": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9756,
        9765
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1473": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9767,
        9777
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1474": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9738,
        9755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x765"
    },
    "1477": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9738,
        9778
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1478": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9738,
        9778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1479": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "POP",
      "path": "0"
    },
    "1480": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "POP",
      "path": "0"
    },
    "1481": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "o",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1482": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1166,
        1265
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1483": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1240,
        1244
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 18,
      "value": "0x4"
    },
    "1485": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1240,
        1244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1486": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1206,
        1213
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1488": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1206,
        1213
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1489": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1232,
        1258
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E6"
    },
    "1492": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1232,
        1258
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1493": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1256,
        1258
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x32"
    },
    "1495": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1256,
        1258
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1502": {
      "op": "SHL"
    },
    "1503": {
      "op": "SUB"
    },
    "1504": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1240,
        1244
      ],
      "op": "AND",
      "path": "3"
    },
    "1505": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1232,
        1253
      ],
      "op": "BALANCE",
      "path": "3"
    },
    "1506": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1232,
        1258
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA09"
    },
    "1509": {
      "fn": "CoinToss.maximumBid",
      "jump": "i",
      "offset": [
        1232,
        1258
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1510": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1232,
        1258
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1511": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1225,
        1258
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1512": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1225,
        1258
      ],
      "op": "POP",
      "path": "3"
    },
    "1513": {
      "fn": "CoinToss.maximumBid",
      "offset": [
        1166,
        1265
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1514": {
      "fn": "CoinToss.maximumBid",
      "jump": "o",
      "offset": [
        1166,
        1265
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1515": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7732,
        8752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1516": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7809,
        7826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1518": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7838
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 19,
      "value": "0x0"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1557": {
      "op": "SHL"
    },
    "1558": {
      "op": "SUB"
    },
    "1559": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7854
      ],
      "op": "AND",
      "path": "0"
    },
    "1560": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7854
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4000AEA0"
    },
    "1565": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7855,
        7869
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "1598": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7871,
        7875
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1599": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7896
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1600": {
      "offset": [
        6589,
        6590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1602": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1604": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1605": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1607": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1608": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65B"
    },
    "1611": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1612": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1613": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1614": {
      "op": "SWAP2"
    },
    "1615": {
      "op": "DUP3"
    },
    "1616": {
      "op": "MSTORE"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1619": {
      "op": "DUP3"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "op": "MSTORE"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1624": {
      "op": "ADD"
    },
    "1625": {
      "op": "SWAP1"
    },
    "1626": {
      "op": "JUMP"
    },
    "1627": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1628": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1630": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1631": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1633": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1634": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1635": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SUB",
      "path": "0"
    },
    "1636": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SUB",
      "path": "0"
    },
    "1637": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1638": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1639": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1640": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1642": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1643": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1645": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1646": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1647": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1652": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "AND",
      "path": "0"
    },
    "1653": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1655": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SHL",
      "path": "0"
    },
    "1656": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1657": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1658": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1660": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ADD",
      "path": "0"
    },
    "1661": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x688"
    },
    "1664": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1665": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1666": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1667": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1668": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1D"
    },
    "1671": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1672": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1673": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1675": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1677": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1678": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1679": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1680": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SUB",
      "path": "0"
    },
    "1681": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1682": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1684": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1685": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "GAS",
      "path": "0"
    },
    "1686": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "CALL",
      "path": "0"
    },
    "1687": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1688": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1689": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1690": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A7"
    },
    "1693": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1694": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1695": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1697": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1698": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1699": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1700": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1702": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1703": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1704": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "1705": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "1706": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "1707": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "1708": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1710": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1711": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1712": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1714": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "NOT",
      "path": "0"
    },
    "1715": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1717": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1718": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ADD",
      "path": "0"
    },
    "1719": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "AND",
      "path": "0"
    },
    "1720": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1721": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ADD",
      "path": "0"
    },
    "1722": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1723": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1725": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1726": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "1727": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1728": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ADD",
      "path": "0"
    },
    "1729": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1730": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CB"
    },
    "1733": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1734": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1735": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA89"
    },
    "1738": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1739": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1740": {
      "op": "POP"
    },
    "1741": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8152,
        8167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1743": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1744": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1745": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1746": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1748": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1749": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1750": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1751": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1753": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1754": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1755": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1756": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1757": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 20
    },
    "1758": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1759": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1760": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1761": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "ADD",
      "path": "1"
    },
    "1762": {
      "op": "DUP9"
    },
    "1763": {
      "op": "SWAP1"
    },
    "1764": {
      "op": "MSTORE"
    },
    "1765": {
      "op": "DUP1"
    },
    "1766": {
      "op": "DUP4"
    },
    "1767": {
      "op": "ADD"
    },
    "1768": {
      "op": "DUP6"
    },
    "1769": {
      "op": "SWAP1"
    },
    "1770": {
      "op": "MSTORE"
    },
    "1771": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8228,
        8232
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1774": {
      "op": "DUP3"
    },
    "1775": {
      "op": "ADD"
    },
    "1776": {
      "op": "MSTORE"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1779": {
      "op": "DUP1"
    },
    "1780": {
      "op": "DUP3"
    },
    "1781": {
      "op": "ADD"
    },
    "1782": {
      "op": "DUP4"
    },
    "1783": {
      "op": "SWAP1"
    },
    "1784": {
      "op": "MSTORE"
    },
    "1785": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1786": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1787": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1788": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1789": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SUB",
      "path": "1"
    },
    "1790": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1791": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1792": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "ADD",
      "path": "1"
    },
    "1793": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1794": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1797": {
      "op": "SWAP1"
    },
    "1798": {
      "op": "SWAP2"
    },
    "1799": {
      "op": "ADD"
    },
    "1800": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1801": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1802": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1803": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1804": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1805": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1806": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1807": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "ADD",
      "path": "1"
    },
    "1808": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1809": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1810": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1811": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1812": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 21
    },
    "1813": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1814": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1815": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1816": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1817": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1818": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1819": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x725"
    },
    "1822": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1823": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8701,
        8702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1825": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAB"
    },
    "1828": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8682,
        8702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1829": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1830": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1832": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1833": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1834": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1835": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1837": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1838": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1839": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1840": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1842": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1843": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1844": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1845": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1846": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8702
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1847": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1848": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8702
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1849": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8702
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1850": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 22
    },
    "1851": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1852": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1853": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1854": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "ADD",
      "path": "1"
    },
    "1855": {
      "op": "DUP8"
    },
    "1856": {
      "op": "SWAP1"
    },
    "1857": {
      "op": "MSTORE"
    },
    "1858": {
      "op": "DUP1"
    },
    "1859": {
      "op": "DUP3"
    },
    "1860": {
      "op": "ADD"
    },
    "1861": {
      "op": "DUP5"
    },
    "1862": {
      "op": "SWAP1"
    },
    "1863": {
      "op": "MSTORE"
    },
    "1864": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1865": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1866": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1867": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1868": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "SUB",
      "path": "1"
    },
    "1869": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1870": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "ADD",
      "path": "1"
    },
    "1871": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1872": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1875": {
      "op": "SWAP1"
    },
    "1876": {
      "op": "SWAP2"
    },
    "1877": {
      "op": "ADD"
    },
    "1878": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1879": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1880": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1881": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1882": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1883": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1884": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "ADD",
      "path": "1"
    },
    "1885": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1886": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8708,
        8747
      ],
      "op": "SWAP5",
      "path": "0",
      "statement": 23
    },
    "1887": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7732,
        8752
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "op": "POP"
    },
    "1890": {
      "op": "POP"
    },
    "1891": {
      "op": "POP"
    },
    "1892": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "o",
      "offset": [
        7732,
        8752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1893": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2330,
        2898
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1894": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2463,
        2475
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 24,
      "value": "0x2"
    },
    "1896": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "1898": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2459
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1899": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2459
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1902": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2459
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1903": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2459
      ],
      "op": "DIV",
      "path": "3"
    },
    "1904": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1906": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2459
      ],
      "op": "AND",
      "path": "3"
    },
    "1907": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1909": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2475
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1910": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2475
      ],
      "op": "GT",
      "path": "3"
    },
    "1911": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2475
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1912": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2475
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x783"
    },
    "1915": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2475
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1916": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2475
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x783"
    },
    "1919": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2475
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x967"
    },
    "1922": {
      "fn": "CoinToss.fulfillRandomness",
      "jump": "i",
      "offset": [
        2454,
        2475
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1923": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2475
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1924": {
      "branch": 43,
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2454,
        2475
      ],
      "op": "EQ",
      "path": "3"
    },
    "1925": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2446,
        2476
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x78D"
    },
    "1928": {
      "branch": 43,
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2446,
        2476
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1929": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2446,
        2476
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1931": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2446,
        2476
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1932": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2446,
        2476
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1933": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2446,
        2476
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1934": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2494,
        2508
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 25,
      "value": "0x2"
    },
    "1936": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2494,
        2508
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1937": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2494,
        2508
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1940": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2494,
        2508
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1941": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2494,
        2508
      ],
      "op": "DIV",
      "path": "3"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1948": {
      "op": "SHL"
    },
    "1949": {
      "op": "SUB"
    },
    "1950": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2494,
        2508
      ],
      "op": "AND",
      "path": "3"
    },
    "1951": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2486,
        2523
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A7"
    },
    "1954": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2486,
        2523
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1955": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2486,
        2523
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1957": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2486,
        2523
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1958": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2486,
        2523
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1959": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2486,
        2523
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1960": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2555,
        2556
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 26,
      "value": "0x0"
    },
    "1962": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2541,
        2552
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1963": {
      "branch": 44,
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2541,
        2556
      ],
      "op": "GT",
      "path": "3"
    },
    "1964": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2533,
        2557
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7B4"
    },
    "1967": {
      "branch": 44,
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2533,
        2557
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1968": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2533,
        2557
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1970": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2533,
        2557
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1971": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2533,
        2557
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1972": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2533,
        2557
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1973": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2583,
        2598
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 27,
      "value": "0x7BF"
    },
    "1976": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2597,
        2598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1978": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2583,
        2594
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1979": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2583,
        2598
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAC3"
    },
    "1982": {
      "fn": "CoinToss.fulfillRandomness",
      "jump": "i",
      "offset": [
        2583,
        2598
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1983": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2583,
        2598
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1984": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2574
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1986": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2599
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1987": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2599
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1990": {
      "op": "NOT"
    },
    "1991": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2599
      ],
      "op": "AND",
      "path": "3"
    },
    "1992": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1994": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2599
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1995": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2599
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1996": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2599
      ],
      "op": "AND",
      "path": "3"
    },
    "1997": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2599
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1998": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2599
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1999": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2599
      ],
      "op": "OR",
      "path": "3"
    },
    "2000": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2599
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2001": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2599
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2002": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2568,
        2599
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2003": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2625,
        2636
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2005": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2625,
        2636
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2010": {
      "op": "SHL"
    },
    "2011": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2625,
        2636
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2012": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2625,
        2636
      ],
      "op": "DIV",
      "path": "3"
    },
    "2013": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2625,
        2636
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2014": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2625,
        2636
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2015": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2625,
        2636
      ],
      "op": "AND",
      "path": "3"
    },
    "2016": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2615,
        2636
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2017": {
      "branch": 45,
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2615,
        2636
      ],
      "op": "SUB",
      "path": "3"
    },
    "2018": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2611,
        2700
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x856"
    },
    "2021": {
      "branch": 45,
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2611,
        2700
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2022": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2656
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 28,
      "value": "0x4"
    },
    "2024": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2656
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2025": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2656
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2026": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2667,
        2681
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2028": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2667,
        2681
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2029": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2683,
        2688
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "2031": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2683,
        2688
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2032": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2034": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2035": {
      "op": "PUSH4",
      "value": "0x4E958D05"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2042": {
      "op": "SHL"
    },
    "2043": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2044": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2051": {
      "op": "SHL"
    },
    "2052": {
      "op": "SUB"
    },
    "2053": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2656
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2056": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2667,
        2681
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2057": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2667,
        2681
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2058": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2667,
        2681
      ],
      "op": "DIV",
      "path": "3"
    },
    "2059": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2667,
        2681
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2060": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2667,
        2681
      ],
      "op": "AND",
      "path": "3"
    },
    "2061": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2062": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2063": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "ADD",
      "path": "3"
    },
    "2064": {
      "op": "SWAP5"
    },
    "2065": {
      "op": "SWAP1"
    },
    "2066": {
      "op": "SWAP5"
    },
    "2067": {
      "op": "MSTORE"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2070": {
      "op": "DUP5"
    },
    "2071": {
      "op": "ADD"
    },
    "2072": {
      "op": "MSTORE"
    },
    "2073": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2656
      ],
      "op": "AND",
      "path": "3"
    },
    "2074": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2656
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2075": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2666
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4E958D05"
    },
    "2080": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2666
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2083": {
      "op": "ADD"
    },
    "2084": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2086": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2088": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2089": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2090": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2091": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "SUB",
      "path": "3"
    },
    "2092": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2093": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2095": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2096": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2097": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "2098": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2099": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2100": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2101": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x83D"
    },
    "2104": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2105": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2107": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2108": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2109": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2110": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "POP",
      "path": "3"
    },
    "2111": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "GAS",
      "path": "3"
    },
    "2112": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "CALL",
      "path": "3"
    },
    "2113": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2114": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2115": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2116": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x851"
    },
    "2119": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2120": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2121": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2123": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2124": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2125": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2126": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2128": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2129": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2130": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "POP",
      "path": "3"
    },
    "2131": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "POP",
      "path": "3"
    },
    "2132": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "POP",
      "path": "3"
    },
    "2133": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2652,
        2689
      ],
      "op": "POP",
      "path": "3"
    },
    "2134": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2611,
        2700
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2135": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2722,
        2728
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 29,
      "value": "0x2"
    },
    "2137": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2722,
        2728
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2138": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2730,
        2741
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2140": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2730,
        2741
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2141": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2743,
        2746
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "2143": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2743,
        2746
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2144": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2715,
        2780
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2146": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2715,
        2780
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2147": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2715,
        2780
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2148": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2722,
        2728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2150": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2722,
        2728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2151": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2722,
        2728
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2152": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2722,
        2728
      ],
      "op": "AND",
      "path": "3"
    },
    "2153": {
      "op": "DUP3"
    },
    "2154": {
      "op": "MSTORE"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2159": {
      "op": "SHL"
    },
    "2160": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2730,
        2741
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2161": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2730,
        2741
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2162": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2730,
        2741
      ],
      "op": "DIV",
      "path": "3"
    },
    "2163": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2730,
        2741
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2164": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2730,
        2741
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2165": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2730,
        2741
      ],
      "op": "AND",
      "path": "3"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2168": {
      "op": "DUP5"
    },
    "2169": {
      "op": "ADD"
    },
    "2170": {
      "op": "MSTORE"
    },
    "2171": {
      "op": "DUP3"
    },
    "2172": {
      "op": "ADD"
    },
    "2173": {
      "op": "MSTORE"
    },
    "2174": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2722,
        2728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2177": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2748,
        2762
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2178": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2748,
        2762
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2179": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2748,
        2762
      ],
      "op": "DIV",
      "path": "3"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "op": "SUB"
    },
    "2188": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2748,
        2762
      ],
      "op": "AND",
      "path": "3"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2191": {
      "op": "DUP3"
    },
    "2192": {
      "op": "ADD"
    },
    "2193": {
      "op": "MSTORE"
    },
    "2194": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2764,
        2779
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2197": {
      "op": "DUP3"
    },
    "2198": {
      "op": "ADD"
    },
    "2199": {
      "op": "MSTORE"
    },
    "2200": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2715,
        2780
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x753342EA4B32F4D5DE53502A8E9A7F7D91BBC2B0DE37A9D3F79AFEA8F96E01B4"
    },
    "2233": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2715,
        2780
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2236": {
      "op": "ADD"
    },
    "2237": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2715,
        2780
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2239": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2715,
        2780
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2240": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2715,
        2780
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2241": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2715,
        2780
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2242": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2715,
        2780
      ],
      "op": "SUB",
      "path": "3"
    },
    "2243": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2715,
        2780
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2244": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2715,
        2780
      ],
      "op": "LOG1",
      "path": "3"
    },
    "2245": {
      "op": "POP"
    },
    "2246": {
      "op": "POP"
    },
    "2247": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2797,
        2798
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 30,
      "value": "0x0"
    },
    "2249": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2791,
        2794
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "2251": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2791,
        2798
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2252": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2791,
        2798
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2253": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2791,
        2798
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2254": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2808,
        2813
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 31,
      "value": "0x7"
    },
    "2256": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2808,
        2817
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2257": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2827,
        2841
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 32,
      "value": "0x2"
    },
    "2259": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2827,
        2863
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2260": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2827,
        2863
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2261": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2268": {
      "op": "SHL"
    },
    "2269": {
      "op": "SUB"
    },
    "2270": {
      "op": "NOT"
    },
    "2271": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2827,
        2863
      ],
      "op": "AND",
      "path": "3"
    },
    "2272": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2827,
        2863
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2273": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2827,
        2863
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2274": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2873,
        2878
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 33,
      "value": "0x8"
    },
    "2276": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2873,
        2891
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2277": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2873,
        2891
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2278": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2281": {
      "op": "NOT"
    },
    "2282": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2873,
        2891
      ],
      "op": "AND",
      "path": "3"
    },
    "2283": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2827,
        2863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2286": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2873,
        2891
      ],
      "op": "OR",
      "path": "3"
    },
    "2287": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2873,
        2891
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2288": {
      "fn": "CoinToss.fulfillRandomness",
      "offset": [
        2873,
        2891
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2289": {
      "fn": "CoinToss.fulfillRandomness",
      "jump": "o",
      "offset": [
        2330,
        2898
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2290": {
      "op": "JUMPDEST"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2295": {
      "op": "DUP3"
    },
    "2296": {
      "op": "DUP5"
    },
    "2297": {
      "op": "SUB"
    },
    "2298": {
      "op": "SLT"
    },
    "2299": {
      "op": "ISZERO"
    },
    "2300": {
      "op": "PUSH2",
      "value": "0x904"
    },
    "2303": {
      "op": "JUMPI"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2306": {
      "op": "DUP1"
    },
    "2307": {
      "op": "REVERT"
    },
    "2308": {
      "op": "JUMPDEST"
    },
    "2309": {
      "op": "DUP2"
    },
    "2310": {
      "op": "CALLDATALOAD"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2317": {
      "op": "SHL"
    },
    "2318": {
      "op": "SUB"
    },
    "2319": {
      "op": "DUP2"
    },
    "2320": {
      "op": "AND"
    },
    "2321": {
      "op": "DUP2"
    },
    "2322": {
      "op": "EQ"
    },
    "2323": {
      "op": "PUSH2",
      "value": "0x91B"
    },
    "2326": {
      "op": "JUMPI"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2329": {
      "op": "DUP1"
    },
    "2330": {
      "op": "REVERT"
    },
    "2331": {
      "op": "JUMPDEST"
    },
    "2332": {
      "op": "SWAP4"
    },
    "2333": {
      "op": "SWAP3"
    },
    "2334": {
      "op": "POP"
    },
    "2335": {
      "op": "POP"
    },
    "2336": {
      "op": "POP"
    },
    "2337": {
      "jump": "o",
      "op": "JUMP"
    },
    "2338": {
      "op": "JUMPDEST"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2343": {
      "op": "DUP3"
    },
    "2344": {
      "op": "DUP5"
    },
    "2345": {
      "op": "SUB"
    },
    "2346": {
      "op": "SLT"
    },
    "2347": {
      "op": "ISZERO"
    },
    "2348": {
      "op": "PUSH2",
      "value": "0x934"
    },
    "2351": {
      "op": "JUMPI"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2354": {
      "op": "DUP1"
    },
    "2355": {
      "op": "REVERT"
    },
    "2356": {
      "op": "JUMPDEST"
    },
    "2357": {
      "op": "DUP2"
    },
    "2358": {
      "op": "CALLDATALOAD"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2361": {
      "op": "DUP2"
    },
    "2362": {
      "op": "AND"
    },
    "2363": {
      "op": "DUP2"
    },
    "2364": {
      "op": "EQ"
    },
    "2365": {
      "op": "PUSH2",
      "value": "0x91B"
    },
    "2368": {
      "op": "JUMPI"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2371": {
      "op": "DUP1"
    },
    "2372": {
      "op": "REVERT"
    },
    "2373": {
      "op": "JUMPDEST"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2376": {
      "op": "DUP1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2379": {
      "op": "DUP4"
    },
    "2380": {
      "op": "DUP6"
    },
    "2381": {
      "op": "SUB"
    },
    "2382": {
      "op": "SLT"
    },
    "2383": {
      "op": "ISZERO"
    },
    "2384": {
      "op": "PUSH2",
      "value": "0x958"
    },
    "2387": {
      "op": "JUMPI"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2390": {
      "op": "DUP1"
    },
    "2391": {
      "op": "REVERT"
    },
    "2392": {
      "op": "JUMPDEST"
    },
    "2393": {
      "op": "POP"
    },
    "2394": {
      "op": "POP"
    },
    "2395": {
      "op": "DUP1"
    },
    "2396": {
      "op": "CALLDATALOAD"
    },
    "2397": {
      "op": "SWAP3"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2400": {
      "op": "SWAP1"
    },
    "2401": {
      "op": "SWAP2"
    },
    "2402": {
      "op": "ADD"
    },
    "2403": {
      "op": "CALLDATALOAD"
    },
    "2404": {
      "op": "SWAP2"
    },
    "2405": {
      "op": "POP"
    },
    "2406": {
      "jump": "o",
      "op": "JUMP"
    },
    "2407": {
      "op": "JUMPDEST"
    },
    "2408": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2415": {
      "op": "SHL"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2418": {
      "op": "MSTORE"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2423": {
      "op": "MSTORE"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2428": {
      "op": "REVERT"
    },
    "2429": {
      "op": "JUMPDEST"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2432": {
      "op": "DUP2"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2436": {
      "op": "DUP4"
    },
    "2437": {
      "op": "LT"
    },
    "2438": {
      "op": "PUSH2",
      "value": "0x99F"
    },
    "2441": {
      "op": "JUMPI"
    },
    "2442": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2449": {
      "op": "SHL"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2452": {
      "op": "MSTORE"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2457": {
      "op": "MSTORE"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2462": {
      "op": "REVERT"
    },
    "2463": {
      "op": "JUMPDEST"
    },
    "2464": {
      "op": "SWAP2"
    },
    "2465": {
      "op": "SWAP1"
    },
    "2466": {
      "op": "MSTORE"
    },
    "2467": {
      "op": "SWAP1"
    },
    "2468": {
      "jump": "o",
      "op": "JUMP"
    },
    "2469": {
      "op": "JUMPDEST"
    },
    "2470": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2477": {
      "op": "SHL"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2480": {
      "op": "MSTORE"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2485": {
      "op": "MSTORE"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2490": {
      "op": "REVERT"
    },
    "2491": {
      "op": "JUMPDEST"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2494": {
      "op": "DUP2"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2497": {
      "op": "NOT"
    },
    "2498": {
      "op": "DIV"
    },
    "2499": {
      "op": "DUP4"
    },
    "2500": {
      "op": "GT"
    },
    "2501": {
      "op": "DUP3"
    },
    "2502": {
      "op": "ISZERO"
    },
    "2503": {
      "op": "ISZERO"
    },
    "2504": {
      "op": "AND"
    },
    "2505": {
      "op": "ISZERO"
    },
    "2506": {
      "op": "PUSH2",
      "value": "0x9D5"
    },
    "2509": {
      "op": "JUMPI"
    },
    "2510": {
      "op": "PUSH2",
      "value": "0x9D5"
    },
    "2513": {
      "op": "PUSH2",
      "value": "0x9A5"
    },
    "2516": {
      "jump": "i",
      "op": "JUMP"
    },
    "2517": {
      "op": "JUMPDEST"
    },
    "2518": {
      "op": "POP"
    },
    "2519": {
      "op": "MUL"
    },
    "2520": {
      "op": "SWAP1"
    },
    "2521": {
      "jump": "o",
      "op": "JUMP"
    },
    "2522": {
      "op": "JUMPDEST"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2527": {
      "op": "DUP3"
    },
    "2528": {
      "op": "DUP5"
    },
    "2529": {
      "op": "SUB"
    },
    "2530": {
      "op": "SLT"
    },
    "2531": {
      "op": "ISZERO"
    },
    "2532": {
      "op": "PUSH2",
      "value": "0x9EC"
    },
    "2535": {
      "op": "JUMPI"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2538": {
      "op": "DUP1"
    },
    "2539": {
      "op": "REVERT"
    },
    "2540": {
      "op": "JUMPDEST"
    },
    "2541": {
      "op": "POP"
    },
    "2542": {
      "op": "MLOAD"
    },
    "2543": {
      "op": "SWAP2"
    },
    "2544": {
      "op": "SWAP1"
    },
    "2545": {
      "op": "POP"
    },
    "2546": {
      "jump": "o",
      "op": "JUMP"
    },
    "2547": {
      "op": "JUMPDEST"
    },
    "2548": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2555": {
      "op": "SHL"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2558": {
      "op": "MSTORE"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2563": {
      "op": "MSTORE"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2568": {
      "op": "REVERT"
    },
    "2569": {
      "op": "JUMPDEST"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2572": {
      "op": "DUP3"
    },
    "2573": {
      "op": "PUSH2",
      "value": "0xA18"
    },
    "2576": {
      "op": "JUMPI"
    },
    "2577": {
      "op": "PUSH2",
      "value": "0xA18"
    },
    "2580": {
      "op": "PUSH2",
      "value": "0x9F3"
    },
    "2583": {
      "jump": "i",
      "op": "JUMP"
    },
    "2584": {
      "op": "JUMPDEST"
    },
    "2585": {
      "op": "POP"
    },
    "2586": {
      "op": "DIV"
    },
    "2587": {
      "op": "SWAP1"
    },
    "2588": {
      "jump": "o",
      "op": "JUMP"
    },
    "2589": {
      "op": "JUMPDEST"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2592": {
      "op": "DUP1"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2595": {
      "op": "SHL"
    },
    "2596": {
      "op": "SUB"
    },
    "2597": {
      "op": "DUP5"
    },
    "2598": {
      "op": "AND"
    },
    "2599": {
      "op": "DUP2"
    },
    "2600": {
      "op": "MSTORE"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2605": {
      "op": "DUP5"
    },
    "2606": {
      "op": "DUP2"
    },
    "2607": {
      "op": "DUP5"
    },
    "2608": {
      "op": "ADD"
    },
    "2609": {
      "op": "MSTORE"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2614": {
      "op": "DUP5"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "op": "MSTORE"
    },
    "2617": {
      "op": "DUP4"
    },
    "2618": {
      "op": "MLOAD"
    },
    "2619": {
      "op": "DUP1"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2622": {
      "op": "DUP6"
    },
    "2623": {
      "op": "ADD"
    },
    "2624": {
      "op": "MSTORE"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2627": {
      "op": "JUMPDEST"
    },
    "2628": {
      "op": "DUP2"
    },
    "2629": {
      "op": "DUP2"
    },
    "2630": {
      "op": "LT"
    },
    "2631": {
      "op": "ISZERO"
    },
    "2632": {
      "op": "PUSH2",
      "value": "0xA5F"
    },
    "2635": {
      "op": "JUMPI"
    },
    "2636": {
      "op": "DUP6"
    },
    "2637": {
      "op": "DUP2"
    },
    "2638": {
      "op": "ADD"
    },
    "2639": {
      "op": "DUP4"
    },
    "2640": {
      "op": "ADD"
    },
    "2641": {
      "op": "MLOAD"
    },
    "2642": {
      "op": "DUP6"
    },
    "2643": {
      "op": "DUP3"
    },
    "2644": {
      "op": "ADD"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2647": {
      "op": "ADD"
    },
    "2648": {
      "op": "MSTORE"
    },
    "2649": {
      "op": "DUP3"
    },
    "2650": {
      "op": "ADD"
    },
    "2651": {
      "op": "PUSH2",
      "value": "0xA43"
    },
    "2654": {
      "op": "JUMP"
    },
    "2655": {
      "op": "JUMPDEST"
    },
    "2656": {
      "op": "DUP2"
    },
    "2657": {
      "op": "DUP2"
    },
    "2658": {
      "op": "GT"
    },
    "2659": {
      "op": "ISZERO"
    },
    "2660": {
      "op": "PUSH2",
      "value": "0xA71"
    },
    "2663": {
      "op": "JUMPI"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2668": {
      "op": "DUP4"
    },
    "2669": {
      "op": "DUP8"
    },
    "2670": {
      "op": "ADD"
    },
    "2671": {
      "op": "ADD"
    },
    "2672": {
      "op": "MSTORE"
    },
    "2673": {
      "op": "JUMPDEST"
    },
    "2674": {
      "op": "POP"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2677": {
      "op": "ADD"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2680": {
      "op": "NOT"
    },
    "2681": {
      "op": "AND"
    },
    "2682": {
      "op": "SWAP3"
    },
    "2683": {
      "op": "SWAP1"
    },
    "2684": {
      "op": "SWAP3"
    },
    "2685": {
      "op": "ADD"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2688": {
      "op": "ADD"
    },
    "2689": {
      "op": "SWAP6"
    },
    "2690": {
      "op": "SWAP5"
    },
    "2691": {
      "op": "POP"
    },
    "2692": {
      "op": "POP"
    },
    "2693": {
      "op": "POP"
    },
    "2694": {
      "op": "POP"
    },
    "2695": {
      "op": "POP"
    },
    "2696": {
      "jump": "o",
      "op": "JUMP"
    },
    "2697": {
      "op": "JUMPDEST"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2702": {
      "op": "DUP3"
    },
    "2703": {
      "op": "DUP5"
    },
    "2704": {
      "op": "SUB"
    },
    "2705": {
      "op": "SLT"
    },
    "2706": {
      "op": "ISZERO"
    },
    "2707": {
      "op": "PUSH2",
      "value": "0xA9B"
    },
    "2710": {
      "op": "JUMPI"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2713": {
      "op": "DUP1"
    },
    "2714": {
      "op": "REVERT"
    },
    "2715": {
      "op": "JUMPDEST"
    },
    "2716": {
      "op": "DUP2"
    },
    "2717": {
      "op": "MLOAD"
    },
    "2718": {
      "op": "DUP1"
    },
    "2719": {
      "op": "ISZERO"
    },
    "2720": {
      "op": "ISZERO"
    },
    "2721": {
      "op": "DUP2"
    },
    "2722": {
      "op": "EQ"
    },
    "2723": {
      "op": "PUSH2",
      "value": "0x91B"
    },
    "2726": {
      "op": "JUMPI"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2729": {
      "op": "DUP1"
    },
    "2730": {
      "op": "REVERT"
    },
    "2731": {
      "op": "JUMPDEST"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2734": {
      "op": "DUP3"
    },
    "2735": {
      "op": "NOT"
    },
    "2736": {
      "op": "DUP3"
    },
    "2737": {
      "op": "GT"
    },
    "2738": {
      "op": "ISZERO"
    },
    "2739": {
      "op": "PUSH2",
      "value": "0xABE"
    },
    "2742": {
      "op": "JUMPI"
    },
    "2743": {
      "op": "PUSH2",
      "value": "0xABE"
    },
    "2746": {
      "op": "PUSH2",
      "value": "0x9A5"
    },
    "2749": {
      "jump": "i",
      "op": "JUMP"
    },
    "2750": {
      "op": "JUMPDEST"
    },
    "2751": {
      "op": "POP"
    },
    "2752": {
      "op": "ADD"
    },
    "2753": {
      "op": "SWAP1"
    },
    "2754": {
      "jump": "o",
      "op": "JUMP"
    },
    "2755": {
      "op": "JUMPDEST"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2758": {
      "op": "DUP3"
    },
    "2759": {
      "op": "PUSH2",
      "value": "0xAD2"
    },
    "2762": {
      "op": "JUMPI"
    },
    "2763": {
      "op": "PUSH2",
      "value": "0xAD2"
    },
    "2766": {
      "op": "PUSH2",
      "value": "0x9F3"
    },
    "2769": {
      "jump": "i",
      "op": "JUMP"
    },
    "2770": {
      "op": "JUMPDEST"
    },
    "2771": {
      "op": "POP"
    },
    "2772": {
      "op": "MOD"
    },
    "2773": {
      "op": "SWAP1"
    },
    "2774": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6977467a60a9ea8c0d0e722be11c8de734b0b870",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\nimport \"./Pool.sol\";\n\ncontract CoinToss is VRFConsumerBase {\n    uint256 internal fee;\n    uint8 public result;\n    address payable current_player;\n    bytes32 keyhash;\n    Pool pool;\n    address owner;\n    uint8 guess_value;\n    uint256 bid;\n    uint256 prize;\n    bool pool_is_set = false;\n\n    enum STATE {\n        DEPLOYED,\n        OPEN,\n        CLOSED\n    }\n\n    STATE public state;\n\n    event RequestedRandomness(bytes32 requestId);\n    event Result(uint8 guess_value, uint8 result, uint256 bid, address player, uint256 timestamp);\n\n    constructor(\n        address _vrfCoordinator,\n        address _link,\n        uint256 _fee,\n        bytes32 _keyhash\n    ) VRFConsumerBase(_vrfCoordinator, _link) {\n        fee = _fee;\n        keyhash = _keyhash;\n        owner = msg.sender;\n\n        state = STATE.DEPLOYED;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not owner\");\n        _;\n    }\n\n    function setPool(address payable _pool) public onlyOwner {\n        pool = Pool(_pool);\n        state = STATE.OPEN;\n    }\n\n    function maximumBid() internal returns (uint256) {\n        return address(pool).balance / 50;\n    }\n\n    function flip(uint8 _guess_value) external payable {\n        require(state == STATE.OPEN);\n        require(current_player == address(0));\n\n        require(\n            _guess_value == 0 || _guess_value == 1,\n            \"Wrong format of guess value\"\n        );\n        guess_value = _guess_value;\n\n        require(msg.value <= maximumBid(), \"Your bid is too big\");\n        bid = msg.value;\n\n        require(address(this).balance == bid, \"Balance of contract is not equal to the bid\");\n\n        prize = bid * 2;\n\n        state = STATE.CLOSED;\n        current_player = payable(msg.sender);\n\n        (bool sent, bytes memory data) = payable(address(pool)).call{value: address(this).balance}(\n            \"\"\n        );\n        require(sent, \"Transaction was not successfull\");\n        require(address(this).balance == 0, \"Not all ETH transferred to the pool\");\n        \n\n        require(LINK.balanceOf(address(this)) >= fee, \"Not enough LINK\");\n\n        bytes32 requestId = requestRandomness(keyhash, fee);\n        emit RequestedRandomness(requestId);\n    }\n\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness)\n        internal\n        override\n    {\n        require(state == STATE.CLOSED);\n        require(current_player != address(0));\n        require(_randomness > 0);\n\n        result = uint8(_randomness % 2);\n\n\n        if (result == guess_value) {\n            pool.payWinner(current_player, prize);\n        }\n\n        emit Result(result, guess_value, bid, current_player, block.timestamp);\n\n        bid = 0;\n        prize = 0;\n        current_player = payable(address(0));\n        state = STATE.OPEN;\n    }\n}\n",
  "sourceMap": "139:2761:3:-:0;;;383:24;;;-1:-1:-1;;383:24:3;;;660:278;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9306:32:0;;;;;9344;;;;;;832:3:3::1;:10:::0;;;;852:7:::1;:18:::0;880:5:::1;:18:::0;;-1:-1:-1;;;;;;880:18:3::1;888:10;880:18;::::0;;909:5:::1;:22:::0;;-1:-1:-1;;909:22:3::1;::::0;;139:2761;;14:177:5;93:13;;-1:-1:-1;;;;;135:31:5;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;558:2;543:18;;537:25;602:2;587:18;;;581:25;196:416;;459:59;;-1:-1:-1;196:416:5;-1:-1:-1;;;196:416:5:o;617:127::-;139:2761:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CoinToss.sol",
  "type": "contract"
}